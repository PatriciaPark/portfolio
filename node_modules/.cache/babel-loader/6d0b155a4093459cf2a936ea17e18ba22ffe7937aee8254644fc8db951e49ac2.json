{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\pages\\\\Game.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 400,\n    height: 300\n  });\n\n  // 브릭걸 상태 및 이동 제어\n  const girlX = 30;\n  const girlYRef = useRef(150);\n  const girlSpeed = 4;\n  const keys = useRef({\n    up: false,\n    down: false\n  });\n\n  // 스프라이트 애니메이션 관련 설정\n  const spriteRef = useRef(new Image());\n  const frameWidth = 343; // Math.floor(1024 / 3) = 341\n  const frameHeight = 512; // Math.floor(1024 / 2) = 512\n  const numCols = 3; // 이미지 가로 프레임 수\n  const numRows = 2; // 이미지 세로 프레임 수\n  const frameX = useRef(0);\n  const frameY = useRef(0);\n  const frameCount = useRef(0);\n  const [spriteLoaded, setSpriteLoaded] = useState(false);\n\n  // 적 우주선 상태\n  const enemiesRef = useRef([]);\n  const enemySpawnInterval = useRef(null);\n\n  // 벽돌 관련\n  const bricksRef = useRef([]);\n  const shootCooldownRef = useRef(false);\n  const shootIntervalRef = useRef(null);\n\n  // 애니메이션 루프\n  const animationRef = useRef();\n\n  // 별빛 배경\n  const starsRef = useRef([]);\n\n  // 점수 및 상태\n  const [score, setScore] = useState(0);\n  const scoreRef = useRef(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameClear, setGameClear] = useState(false);\n\n  // 별빛 초기화\n  useEffect(() => {\n    const stars = Array.from({\n      length: 100\n    }, () => ({\n      x: Math.random() * canvasSize.width,\n      y: Math.random() * canvasSize.height,\n      size: Math.random() * 0.8 + 0.2,\n      speed: Math.random() * 1 + 0.5\n    }));\n    starsRef.current = stars;\n  }, [canvasSize]);\n\n  // 브릭걸 스프라이트 이미지 로드\n  useEffect(() => {\n    const sprite = spriteRef.current;\n    sprite.src = process.env.PUBLIC_URL + \"/brickgirl_sprite.png\"; // public 폴더 경로 기준\n    sprite.onload = () => {\n      setSpriteLoaded(true); // 이미지 로드 완료\n    };\n  }, []);\n\n  // 게임 루프 실행\n  useEffect(() => {\n    if (!spriteLoaded) return; // 이미지가 아직 로드되지 않으면 실행 X\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 배경 별빛\n      ctx.fillStyle = \"black\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"white\";\n      starsRef.current.forEach(star => {\n        star.x -= star.speed;\n        if (star.x < 0) star.x = canvas.width;\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\n        ctx.fill();\n      });\n\n      // 게임 종료 화면\n      if (gameOver || gameClear) {\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n        ctx.textAlign = \"center\";\n        ctx.font = \"24px Arial\";\n        ctx.fillStyle = \"white\";\n        ctx.fillText(gameOver ? \"😥 GAME OVER\" : \"🎉 MISSION COMPLETE!\", centerX, centerY - 20);\n        ctx.font = \"18px Arial\";\n        ctx.fillStyle = \"#93c5fd\";\n        ctx.fillText(\"Tap or Press R to Restart\", centerX, centerY + 10);\n        ctx.fillText(\"🔄\", centerX, centerY + 40);\n        return; // draw 중단\n      }\n\n      // 브릭걸 스프라이트 그리기\n      // ctx.font = \"20px Arial\";\n      // ctx.fillText(\"🧱\", girlX, girlYRef.current);\n\n      const scale = 0.1; // 브릭걸 사이즈\n      const drawWidth = frameWidth * scale; // 102.3\n      const drawHeight = frameHeight * scale; // 153.6\n\n      ctx.drawImage(spriteRef.current, frameX.current * frameWidth, frameY.current * frameHeight, frameWidth, frameHeight, girlX, girlYRef.current, drawWidth, drawHeight);\n\n      // 프레임 전환\n      if (frameCount.current % 10 === 0) {\n        frameX.current = (frameX.current + 1) % numCols;\n        if (frameX.current === 0) frameY.current = (frameY.current + 1) % numRows;\n      }\n      frameCount.current++;\n\n      // 브릭걸 이동\n      if (keys.current.up && girlYRef.current > 20) girlYRef.current -= girlSpeed;\n      if (keys.current.down && girlYRef.current < canvas.height - 20) girlYRef.current += girlSpeed;\n\n      // 벽돌 이동 및 적 충돌 체크\n      ctx.font = \"16px Arial\";\n      bricksRef.current.forEach((brick, i) => {\n        brick.x += brick.speed;\n        ctx.fillText(\"🧱\", brick.x, brick.y);\n        enemiesRef.current.forEach((enemy, j) => {\n          if (brick.x > enemy.x - 10 && brick.x < enemy.x + 10 && brick.y > enemy.y - 10 && brick.y < enemy.y + 10) {\n            bricksRef.current.splice(i, 1);\n            enemiesRef.current.splice(j, 1);\n            scoreRef.current++;\n            setScore(scoreRef.current);\n            if (scoreRef.current >= 50) setGameClear(true);\n          }\n        });\n        if (brick.x > canvas.width) bricksRef.current.splice(i, 1);\n      });\n\n      // 적 이동 및 충돌\n      ctx.font = \"20px Arial\";\n      ctx.fillStyle = \"#f472b6\";\n      enemiesRef.current.forEach((enemy, i) => {\n        enemy.x -= enemy.speed;\n        ctx.fillText(enemy.emoji, enemy.x, enemy.y);\n        if (enemy.x < girlX + 10 && enemy.x > girlX - 10 && enemy.y > girlYRef.current - 10 && enemy.y < girlYRef.current + 10) setGameOver(true);\n        if (enemy.x < -30) {\n          enemiesRef.current.splice(i, 1);\n          scoreRef.current = Math.max(0, scoreRef.current - 1);\n          setScore(scoreRef.current);\n        }\n      });\n\n      // 점수 표시\n      ctx.fillStyle = \"#fbbf24\";\n      ctx.font = \"16px Arial\";\n      ctx.fillText(`Score: ${scoreRef.current}`, 10, 30);\n\n      // 반복 호출\n      animationRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n\n    // 키보드 제어\n    const handleKeyDown = e => {\n      if (e.key === \"ArrowUp\") keys.current.up = true;\n      if (e.key === \"ArrowDown\") keys.current.down = true;\n      if (e.key === \" \" && !shootCooldownRef.current && !gameOver && !gameClear) {\n        bricksRef.current.push({\n          x: girlX + 10,\n          y: girlYRef.current,\n          speed: 6\n        });\n        shootCooldownRef.current = true;\n        setTimeout(() => shootCooldownRef.current = false, 300);\n      }\n      if ((e.key === \"r\" || e.key === \"R\") && (gameOver || gameClear)) window.location.reload();\n    };\n    const handleKeyUp = e => {\n      if (e.key === \"ArrowUp\") keys.current.up = false;\n      if (e.key === \"ArrowDown\") keys.current.down = false;\n    };\n\n    // 터치 제어\n    let touchStartY = 0;\n    const onTouchStart = e => {\n      touchStartY = e.touches[0].clientY;\n      if (gameOver || gameClear) {\n        window.location.reload();\n        return;\n      }\n      const touchY = touchStartY - canvas.getBoundingClientRect().top;\n      girlYRef.current = Math.min(Math.max(touchY, 20), canvas.height - 20);\n      if (!shootIntervalRef.current) {\n        shootIntervalRef.current = setInterval(() => {\n          bricksRef.current.push({\n            x: girlX + 10,\n            y: girlYRef.current,\n            speed: 6\n          });\n        }, 250);\n      }\n    };\n    const onTouchMove = e => {\n      const touchY = e.touches[0].clientY - canvas.getBoundingClientRect().top;\n      girlYRef.current = Math.min(Math.max(touchY, 20), canvas.height - 20);\n    };\n    const onTouchEnd = () => {\n      clearInterval(shootIntervalRef.current);\n      shootIntervalRef.current = null;\n    };\n\n    // 이벤트 바인딩\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    canvas.addEventListener(\"touchstart\", onTouchStart, {\n      passive: false\n    });\n    canvas.addEventListener(\"touchmove\", onTouchMove, {\n      passive: false\n    });\n    canvas.addEventListener(\"touchend\", onTouchEnd, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n      canvas.removeEventListener(\"touchstart\", onTouchStart);\n      canvas.removeEventListener(\"touchmove\", onTouchMove);\n      canvas.removeEventListener(\"touchend\", onTouchEnd);\n      cancelAnimationFrame(animationRef.current);\n      clearInterval(shootIntervalRef.current);\n    };\n  }, [canvasSize, gameOver, gameClear, spriteLoaded]);\n\n  // 적 등장 간격\n  useEffect(() => {\n    enemySpawnInterval.current = setInterval(() => {\n      if (!gameOver && !gameClear) {\n        const emojis = [\"🚀\", \"👽\", \"🛸\"];\n        const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];\n        enemiesRef.current.push({\n          x: canvasSize.width + 20,\n          y: Math.random() * (canvasSize.height - 20) + 10,\n          speed: Math.random() * 1.5 + 1.5,\n          emoji: randomEmoji\n        });\n      }\n    }, 1500);\n    return () => clearInterval(enemySpawnInterval.current);\n  }, [canvasSize, gameOver, gameClear]);\n\n  // 반응형 캔버스\n  useEffect(() => {\n    const updateSize = () => {\n      const width = Math.min(window.innerWidth - 10, 480);\n      const height = Math.round(width * 0.75);\n      setCanvasSize({\n        width,\n        height\n      });\n    };\n    updateSize();\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83E\\uDDF1 Brick Girl: Space Defense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      className: \"bg-black rounded shadow-md touch-none\",\n      style: {\n        width: \"100%\",\n        maxWidth: \"480px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"KF71vUlNTdP4kAFnwDPLcjT4pio=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","Game","_s","canvasRef","canvasSize","setCanvasSize","width","height","girlX","girlYRef","girlSpeed","keys","up","down","spriteRef","Image","frameWidth","frameHeight","numCols","numRows","frameX","frameY","frameCount","spriteLoaded","setSpriteLoaded","enemiesRef","enemySpawnInterval","bricksRef","shootCooldownRef","shootIntervalRef","animationRef","starsRef","score","setScore","scoreRef","gameOver","setGameOver","gameClear","setGameClear","stars","Array","from","length","x","Math","random","y","size","speed","current","sprite","src","process","env","PUBLIC_URL","onload","canvas","ctx","getContext","draw","clearRect","fillStyle","fillRect","forEach","star","beginPath","arc","PI","fill","centerX","centerY","textAlign","font","fillText","scale","drawWidth","drawHeight","drawImage","brick","i","enemy","j","splice","emoji","max","requestAnimationFrame","handleKeyDown","e","key","push","setTimeout","window","location","reload","handleKeyUp","touchStartY","onTouchStart","touches","clientY","touchY","getBoundingClientRect","top","min","setInterval","onTouchMove","onTouchEnd","clearInterval","addEventListener","passive","removeEventListener","cancelAnimationFrame","emojis","randomEmoji","floor","updateSize","innerWidth","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","maxWidth","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/pages/Game.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function Game() {\r\n    const canvasRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 400, height: 300 });\r\n\r\n    // 브릭걸 상태 및 이동 제어\r\n    const girlX = 30;\r\n    const girlYRef = useRef(150);\r\n    const girlSpeed = 4;\r\n    const keys = useRef({ up: false, down: false });\r\n\r\n    // 스프라이트 애니메이션 관련 설정\r\n    const spriteRef = useRef(new Image());\r\n    const frameWidth = 343;   // Math.floor(1024 / 3) = 341\r\n    const frameHeight = 512;  // Math.floor(1024 / 2) = 512\r\n    const numCols = 3;  // 이미지 가로 프레임 수\r\n    const numRows = 2;  // 이미지 세로 프레임 수\r\n    const frameX = useRef(0);\r\n    const frameY = useRef(0);\r\n    const frameCount = useRef(0);\r\n    const [spriteLoaded, setSpriteLoaded] = useState(false);\r\n\r\n    // 적 우주선 상태\r\n    const enemiesRef = useRef([]);\r\n    const enemySpawnInterval = useRef(null);\r\n\r\n    // 벽돌 관련\r\n    const bricksRef = useRef([]);\r\n    const shootCooldownRef = useRef(false);\r\n    const shootIntervalRef = useRef(null);\r\n\r\n    // 애니메이션 루프\r\n    const animationRef = useRef();\r\n\r\n    // 별빛 배경\r\n    const starsRef = useRef([]);\r\n\r\n    // 점수 및 상태\r\n    const [score, setScore] = useState(0);\r\n    const scoreRef = useRef(0);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [gameClear, setGameClear] = useState(false);\r\n\r\n    // 별빛 초기화\r\n    useEffect(() => {\r\n        const stars = Array.from({ length: 100 }, () => ({\r\n            x: Math.random() * canvasSize.width,\r\n            y: Math.random() * canvasSize.height,\r\n            size: Math.random() * 0.8 + 0.2,\r\n            speed: Math.random() * 1 + 0.5,\r\n        }));\r\n        starsRef.current = stars;\r\n    }, [canvasSize]);\r\n\r\n    // 브릭걸 스프라이트 이미지 로드\r\n    useEffect(() => {\r\n        const sprite = spriteRef.current;\r\n        sprite.src = process.env.PUBLIC_URL + \"/brickgirl_sprite.png\";  // public 폴더 경로 기준\r\n        sprite.onload = () => {\r\n            setSpriteLoaded(true);  // 이미지 로드 완료\r\n        };\r\n    }, []);\r\n\r\n    // 게임 루프 실행\r\n    useEffect(() => {\r\n        if (!spriteLoaded) return;  // 이미지가 아직 로드되지 않으면 실행 X\r\n\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // 배경 별빛\r\n            ctx.fillStyle = \"black\";\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            ctx.fillStyle = \"white\";\r\n            starsRef.current.forEach((star) => {\r\n                star.x -= star.speed;\r\n                if (star.x < 0) star.x = canvas.width;\r\n                ctx.beginPath();\r\n                ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\r\n                ctx.fill();\r\n            });\r\n\r\n            // 게임 종료 화면\r\n            if (gameOver || gameClear) {\r\n                const centerX = canvas.width / 2;\r\n                const centerY = canvas.height / 2;\r\n                ctx.textAlign = \"center\";\r\n                ctx.font = \"24px Arial\";\r\n                ctx.fillStyle = \"white\";\r\n                ctx.fillText(gameOver ? \"😥 GAME OVER\" : \"🎉 MISSION COMPLETE!\", centerX, centerY - 20);\r\n                ctx.font = \"18px Arial\";\r\n                ctx.fillStyle = \"#93c5fd\";\r\n                ctx.fillText(\"Tap or Press R to Restart\", centerX, centerY + 10);\r\n                ctx.fillText(\"🔄\", centerX, centerY + 40);\r\n                return; // draw 중단\r\n            }\r\n\r\n            // 브릭걸 스프라이트 그리기\r\n            // ctx.font = \"20px Arial\";\r\n            // ctx.fillText(\"🧱\", girlX, girlYRef.current);\r\n\r\n            const scale = 0.1;  // 브릭걸 사이즈\r\n            const drawWidth = frameWidth * scale;    // 102.3\r\n            const drawHeight = frameHeight * scale;  // 153.6\r\n\r\n            ctx.drawImage(\r\n                spriteRef.current,\r\n                frameX.current * frameWidth,\r\n                frameY.current * frameHeight,\r\n                frameWidth,\r\n                frameHeight,\r\n                girlX,\r\n                girlYRef.current,\r\n                drawWidth,\r\n                drawHeight\r\n            );\r\n\r\n            // 프레임 전환\r\n            if (frameCount.current % 10 === 0) {\r\n                frameX.current = (frameX.current + 1) % numCols;\r\n                if (frameX.current === 0) frameY.current = (frameY.current + 1) % numRows;\r\n            }\r\n            frameCount.current++;\r\n\r\n            // 브릭걸 이동\r\n            if (keys.current.up && girlYRef.current > 20) girlYRef.current -= girlSpeed;\r\n            if (keys.current.down && girlYRef.current < canvas.height - 20) girlYRef.current += girlSpeed;\r\n\r\n            // 벽돌 이동 및 적 충돌 체크\r\n            ctx.font = \"16px Arial\";\r\n            bricksRef.current.forEach((brick, i) => {\r\n                brick.x += brick.speed;\r\n                ctx.fillText(\"🧱\", brick.x, brick.y);\r\n\r\n                enemiesRef.current.forEach((enemy, j) => {\r\n                    if (\r\n                        brick.x > enemy.x - 10 &&\r\n                        brick.x < enemy.x + 10 &&\r\n                        brick.y > enemy.y - 10 &&\r\n                        brick.y < enemy.y + 10\r\n                    ) {\r\n                        bricksRef.current.splice(i, 1);\r\n                        enemiesRef.current.splice(j, 1);\r\n                        scoreRef.current++;\r\n                        setScore(scoreRef.current);\r\n                        if (scoreRef.current >= 50) setGameClear(true);\r\n                    }\r\n                });\r\n\r\n                if (brick.x > canvas.width) bricksRef.current.splice(i, 1);\r\n            });\r\n\r\n            // 적 이동 및 충돌\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillStyle = \"#f472b6\";\r\n            enemiesRef.current.forEach((enemy, i) => {\r\n                enemy.x -= enemy.speed;\r\n                ctx.fillText(enemy.emoji, enemy.x, enemy.y);\r\n\r\n                if (\r\n                    enemy.x < girlX + 10 &&\r\n                    enemy.x > girlX - 10 &&\r\n                    enemy.y > girlYRef.current - 10 &&\r\n                    enemy.y < girlYRef.current + 10\r\n                ) setGameOver(true);\r\n\r\n                if (enemy.x < -30) {\r\n                    enemiesRef.current.splice(i, 1);\r\n                    scoreRef.current = Math.max(0, scoreRef.current - 1);\r\n                    setScore(scoreRef.current);\r\n                }\r\n            });\r\n\r\n            // 점수 표시\r\n            ctx.fillStyle = \"#fbbf24\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(`Score: ${scoreRef.current}`, 10, 30);\r\n\r\n            // 반복 호출\r\n            animationRef.current = requestAnimationFrame(draw);\r\n        };\r\n\r\n        draw();\r\n\r\n        // 키보드 제어\r\n        const handleKeyDown = (e) => {\r\n            if (e.key === \"ArrowUp\") keys.current.up = true;\r\n            if (e.key === \"ArrowDown\") keys.current.down = true;\r\n            if (e.key === \" \" && !shootCooldownRef.current && !gameOver && !gameClear) {\r\n                bricksRef.current.push({ x: girlX + 10, y: girlYRef.current, speed: 6 });\r\n                shootCooldownRef.current = true;\r\n                setTimeout(() => (shootCooldownRef.current = false), 300);\r\n            }\r\n            if ((e.key === \"r\" || e.key === \"R\") && (gameOver || gameClear)) window.location.reload();\r\n        };\r\n\r\n        const handleKeyUp = (e) => {\r\n            if (e.key === \"ArrowUp\") keys.current.up = false;\r\n            if (e.key === \"ArrowDown\") keys.current.down = false;\r\n        };\r\n\r\n        // 터치 제어\r\n        let touchStartY = 0;\r\n\r\n        const onTouchStart = (e) => {\r\n            touchStartY = e.touches[0].clientY;\r\n\r\n            if (gameOver || gameClear) {\r\n                window.location.reload();\r\n                return;\r\n            }\r\n\r\n            const touchY = touchStartY - canvas.getBoundingClientRect().top;\r\n            girlYRef.current = Math.min(Math.max(touchY, 20), canvas.height - 20);\r\n\r\n            if (!shootIntervalRef.current) {\r\n                shootIntervalRef.current = setInterval(() => {\r\n                    bricksRef.current.push({ x: girlX + 10, y: girlYRef.current, speed: 6 });\r\n                }, 250);\r\n            }\r\n        };\r\n\r\n        const onTouchMove = (e) => {\r\n            const touchY = e.touches[0].clientY - canvas.getBoundingClientRect().top;\r\n            girlYRef.current = Math.min(Math.max(touchY, 20), canvas.height - 20);\r\n        };\r\n\r\n        const onTouchEnd = () => {\r\n            clearInterval(shootIntervalRef.current);\r\n            shootIntervalRef.current = null;\r\n        };\r\n\r\n        // 이벤트 바인딩\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n        window.addEventListener(\"keyup\", handleKeyUp);\r\n        canvas.addEventListener(\"touchstart\", onTouchStart, { passive: false });\r\n        canvas.addEventListener(\"touchmove\", onTouchMove, { passive: false });\r\n        canvas.addEventListener(\"touchend\", onTouchEnd, { passive: false });\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleKeyDown);\r\n            window.removeEventListener(\"keyup\", handleKeyUp);\r\n            canvas.removeEventListener(\"touchstart\", onTouchStart);\r\n            canvas.removeEventListener(\"touchmove\", onTouchMove);\r\n            canvas.removeEventListener(\"touchend\", onTouchEnd);\r\n            cancelAnimationFrame(animationRef.current);\r\n            clearInterval(shootIntervalRef.current);\r\n        };\r\n    }, [canvasSize, gameOver, gameClear, spriteLoaded]);\r\n\r\n    // 적 등장 간격\r\n    useEffect(() => {\r\n        enemySpawnInterval.current = setInterval(() => {\r\n            if (!gameOver && !gameClear) {\r\n                const emojis = [\"🚀\", \"👽\", \"🛸\"];\r\n                const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];\r\n                enemiesRef.current.push({\r\n                    x: canvasSize.width + 20,\r\n                    y: Math.random() * (canvasSize.height - 20) + 10,\r\n                    speed: Math.random() * 1.5 + 1.5,\r\n                    emoji: randomEmoji,\r\n                });\r\n            }\r\n        }, 1500);\r\n        return () => clearInterval(enemySpawnInterval.current);\r\n    }, [canvasSize, gameOver, gameClear]);\r\n\r\n    // 반응형 캔버스\r\n    useEffect(() => {\r\n        const updateSize = () => {\r\n            const width = Math.min(window.innerWidth - 10, 480);\r\n            const height = Math.round(width * 0.75);\r\n            setCanvasSize({ width, height });\r\n        };\r\n        updateSize();\r\n        window.addEventListener(\"resize\", updateSize);\r\n        return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center mt-6\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">🧱 Brick Girl: Space Defense</h2>\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={canvasSize.width}\r\n                height={canvasSize.height}\r\n                className=\"bg-black rounded shadow-md touch-none\"\r\n                style={{ width: \"100%\", maxWidth: \"480px\" }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}