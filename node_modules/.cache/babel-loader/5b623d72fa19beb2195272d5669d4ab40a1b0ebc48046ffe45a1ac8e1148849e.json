{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfoilo\\\\src\\\\context\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport function LanguageProvider({\n  children\n}) {\n  _s();\n  const [language, setLanguage] = useState(\"en\"); // 초기 언어: 영어\n\n  const toggleLanguage = () => {\n    setLanguage(prev => prev === \"en\" ? \"ko\" : \"en\");\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      toggleLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguageProvider, \"JgNS4s3wc06/6u6z+Ak7Ai5ELN8=\");\n_c = LanguageProvider;\nexport function useLanguage() {\n  _s2();\n  return useContext(LanguageContext);\n}\n_s2(useLanguage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","language","setLanguage","toggleLanguage","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","$RefreshReg$"],"sources":["C:/workspace/portfoilo/src/context/LanguageContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport function LanguageProvider({ children }) {\r\n  const [language, setLanguage] = useState(\"en\"); // 초기 언어: 영어\r\n\r\n  const toggleLanguage = () => {\r\n    setLanguage((prev) => (prev === \"en\" ? \"ko\" : \"en\"));\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, toggleLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useLanguage() {\r\n  return useContext(LanguageContext);\r\n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,SAASM,gBAAgBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BD,WAAW,CAAEE,IAAI,IAAMA,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAK,CAAC;EACtD,CAAC;EAED,oBACER,OAAA,CAACC,eAAe,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,QAAQ;MAAEE;IAAe,CAAE;IAAAJ,QAAA,EAC3DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAACV,EAAA,CAZeF,gBAAgB;AAAAa,EAAA,GAAhBb,gBAAgB;AAchC,OAAO,SAASc,WAAWA,CAAA,EAAG;EAAAC,GAAA;EAC5B,OAAOpB,UAAU,CAACI,eAAe,CAAC;AACpC;AAACgB,GAAA,CAFeD,WAAW;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}