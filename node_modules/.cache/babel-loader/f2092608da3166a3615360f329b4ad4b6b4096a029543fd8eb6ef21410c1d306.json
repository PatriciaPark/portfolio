{"ast":null,"code":"import{useEffect,useRef,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function BrickBreaker(){const canvasRef=useRef(null);// 게임 설정값들\nconst canvasWidth=400;const canvasHeight=300;const ballRadius=10;// 점수 및 게임 상태\nconst[score,setScore]=useState(0);const[gameOver,setGameOver]=useState(false);const[gameClear,setGameClear]=useState(false);const scoreRef=useRef(0);// 공 상태 (x, y, 속도)\nconst xRef=useRef(canvasWidth/2);const yRef=useRef(canvasHeight-60);const dxRef=useRef(2);const dyRef=useRef(-2);// 패들 상태\nconst paddleHeight=10;const paddleWidth=75;const paddleXRef=useRef((canvasWidth-paddleWidth)/2);const keys=useRef({left:false,right:false});const animationRef=useRef(null);// 벽돌 설정값\nconst brickRowCount=3;const brickColumnCount=6;const brickWidth=50;const brickHeight=20;const brickPadding=10;const brickOffsetTop=30;const brickOffsetLeft=25;// 벽돌 배열 초기화\nconst bricks=[];for(let c=0;c<brickColumnCount;c++){bricks[c]=[];for(let r=0;r<brickRowCount;r++){bricks[c][r]={x:0,y:0,status:1};}}// 공 그리기\nconst drawBall=ctx=>{ctx.beginPath();ctx.arc(xRef.current,yRef.current,ballRadius,0,Math.PI*2);ctx.fillStyle=\"#ff6347\";ctx.fill();ctx.closePath();};// 패들 그리기\nconst drawPaddle=ctx=>{ctx.beginPath();ctx.rect(paddleXRef.current,canvasHeight-paddleHeight,paddleWidth,paddleHeight);ctx.fillStyle=\"#0095DD\";ctx.fill();ctx.closePath();};// 벽돌 그리기 및 남은 벽돌 수 체크\nconst drawBricks=ctx=>{let remainingBricks=0;for(let c=0;c<brickColumnCount;c++){for(let r=0;r<brickRowCount;r++){const b=bricks[c][r];if(b.status===1){remainingBricks++;const brickX=c*(brickWidth+brickPadding)+brickOffsetLeft;const brickY=r*(brickHeight+brickPadding)+brickOffsetTop;b.x=brickX;b.y=brickY;// 기본 벽돌 스타일(색상)\n//   ctx.beginPath();\n//   ctx.rect(brickX, brickY, brickWidth, brickHeight);\n//   ctx.fillStyle = \"#fbbf24\";\n//   ctx.fill();\n//   ctx.closePath();\n// 🧱 이모지 스타일\n//   ctx.font = \"24px Arial\";\n//   ctx.textAlign = \"center\";\n//   ctx.textBaseline = \"middle\";\n//   ctx.fillText(\"🧱\", brickX + brickWidth / 2, brickY + brickHeight / 2);\n// 구멍난 벽돌\n// 벽돌 기본 사각형\nctx.beginPath();ctx.fillStyle=\"#b91c1c\";ctx.fillRect(brickX,brickY,brickWidth,brickHeight);ctx.closePath();// 벽돌 구멍 3개\nconst holeCount=3;for(let i=0;i<holeCount;i++){ctx.beginPath();ctx.arc(brickX+brickWidth*(0.2+i*0.3),// 0.2, 0.5, 0.8 위치\nbrickY+brickHeight*0.5,brickHeight*0.2,0,Math.PI*2);ctx.fillStyle=\"#1f1f1f\";// 구멍 색\nctx.fill();ctx.closePath();}}}}// 모든 벽돌 제거 시 클리어 처리\nif(remainingBricks===0&&!gameClear){setGameClear(true);}};// 점수 그리기\n// const drawScore = (ctx) => {\n//     ctx.font = \"14px Arial\";\n//     ctx.fillStyle = \"#ffffff\";\n//     ctx.fillText(`Score: ${scoreRef.current}`, 8, 20);\n// };\n// 게임 화면 안 메시지 박스\nconst drawEndMessage=(ctx,message)=>{ctx.font=\"24px Arial\";ctx.fillStyle=\"#ffffff\";ctx.textAlign=\"center\";ctx.fillText(message,canvasWidth/2,canvasHeight/2);// Restart 버튼 텍스트 안내\nctx.font=\"14px Arial\";ctx.fillText(\"Press R to Restart\",canvasWidth/2,canvasHeight/2+30);};// 공과 벽돌 충돌 감지\nconst collisionDetection=()=>{for(let c=0;c<brickColumnCount;c++){for(let r=0;r<brickRowCount;r++){const b=bricks[c][r];if(b.status===1){if(xRef.current>b.x&&xRef.current<b.x+brickWidth&&yRef.current>b.y&&yRef.current<b.y+brickHeight){dyRef.current=-dyRef.current;b.status=0;scoreRef.current+=1;setScore(scoreRef.current);}}}}};// 키보드 이벤트 핸들러\nconst keyDownHandler=e=>{if(e.key===\"Right\"||e.key===\"ArrowRight\")keys.current.right=true;else if(e.key===\"Left\"||e.key===\"ArrowLeft\")keys.current.left=true;else if(e.key===\"r\"||e.key===\"R\")handleRestart();};const keyUpHandler=e=>{if(e.key===\"Right\"||e.key===\"ArrowRight\")keys.current.right=false;else if(e.key===\"Left\"||e.key===\"ArrowLeft\")keys.current.left=false;};// 리스타트 버튼 클릭시 새로고침\nconst handleRestart=()=>{window.location.reload();};useEffect(()=>{const canvas=canvasRef.current;const ctx=canvas.getContext(\"2d\");document.addEventListener(\"keydown\",keyDownHandler);document.addEventListener(\"keyup\",keyUpHandler);const draw=()=>{ctx.clearRect(0,0,canvas.width,canvas.height);// drawScore(ctx);\ndrawBricks(ctx);drawBall(ctx);drawPaddle(ctx);collisionDetection();// 종료 메시지\nif(gameOver){drawEndMessage(ctx,\"😢 GAME OVER\");cancelAnimationFrame(animationRef.current);return;}if(gameClear){drawEndMessage(ctx,\"🎉 CLEAR!!\");cancelAnimationFrame(animationRef.current);return;}// 벽 충돌 처리\nif(xRef.current+dxRef.current>canvasWidth-ballRadius||xRef.current+dxRef.current<ballRadius)dxRef.current=-dxRef.current;if(yRef.current+dyRef.current<ballRadius)dyRef.current=-dyRef.current;// 바닥 충돌 처리 (게임 오버)\nelse if(yRef.current+dyRef.current>canvasHeight-ballRadius){if(xRef.current>paddleXRef.current&&xRef.current<paddleXRef.current+paddleWidth){dyRef.current=-dyRef.current;}else{setGameOver(true);return;}}// 키 입력에 따른 패들 이동\nif(keys.current.right&&paddleXRef.current<canvasWidth-paddleWidth)paddleXRef.current+=5;else if(keys.current.left&&paddleXRef.current>0)paddleXRef.current-=5;// 공 이동\nxRef.current+=dxRef.current;yRef.current+=dyRef.current;animationRef.current=requestAnimationFrame(draw);};draw();return()=>{document.removeEventListener(\"keydown\",keyDownHandler);document.removeEventListener(\"keyup\",keyUpHandler);cancelAnimationFrame(animationRef.current);};},[gameOver,gameClear]);return/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 flex flex-col items-center\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:canvasWidth,height:canvasHeight,className:\"bg-black rounded shadow-md\"})});}","map":{"version":3,"names":["useEffect","useRef","useState","jsx","_jsx","BrickBreaker","canvasRef","canvasWidth","canvasHeight","ballRadius","score","setScore","gameOver","setGameOver","gameClear","setGameClear","scoreRef","xRef","yRef","dxRef","dyRef","paddleHeight","paddleWidth","paddleXRef","keys","left","right","animationRef","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","bricks","c","r","x","y","status","drawBall","ctx","beginPath","arc","current","Math","PI","fillStyle","fill","closePath","drawPaddle","rect","drawBricks","remainingBricks","b","brickX","brickY","fillRect","holeCount","i","drawEndMessage","message","font","textAlign","fillText","collisionDetection","keyDownHandler","e","key","handleRestart","keyUpHandler","window","location","reload","canvas","getContext","document","addEventListener","draw","clearRect","width","height","cancelAnimationFrame","requestAnimationFrame","removeEventListener","className","children","ref"],"sources":["C:/workspace/portfolio/src/games/BrickBreaker.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function BrickBreaker() {\r\n    const canvasRef = useRef(null);\r\n\r\n    // 게임 설정값들\r\n    const canvasWidth = 400;\r\n    const canvasHeight = 300;\r\n    const ballRadius = 10;\r\n\r\n    // 점수 및 게임 상태\r\n    const [score, setScore] = useState(0);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [gameClear, setGameClear] = useState(false);\r\n    const scoreRef = useRef(0);\r\n\r\n    // 공 상태 (x, y, 속도)\r\n    const xRef = useRef(canvasWidth / 2);\r\n    const yRef = useRef(canvasHeight - 60);\r\n    const dxRef = useRef(2);\r\n    const dyRef = useRef(-2);\r\n\r\n    // 패들 상태\r\n    const paddleHeight = 10;\r\n    const paddleWidth = 75;\r\n    const paddleXRef = useRef((canvasWidth - paddleWidth) / 2);\r\n    const keys = useRef({ left: false, right: false });\r\n    const animationRef = useRef(null);\r\n\r\n    // 벽돌 설정값\r\n    const brickRowCount = 3;\r\n    const brickColumnCount = 6;\r\n    const brickWidth = 50;\r\n    const brickHeight = 20;\r\n    const brickPadding = 10;\r\n    const brickOffsetTop = 30;\r\n    const brickOffsetLeft = 25;\r\n\r\n    // 벽돌 배열 초기화\r\n    const bricks = [];\r\n    for (let c = 0; c < brickColumnCount; c++) {\r\n        bricks[c] = [];\r\n        for (let r = 0; r < brickRowCount; r++) {\r\n            bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n        }\r\n    }\r\n\r\n    // 공 그리기\r\n    const drawBall = (ctx) => {\r\n        ctx.beginPath();\r\n        ctx.arc(xRef.current, yRef.current, ballRadius, 0, Math.PI * 2);\r\n        ctx.fillStyle = \"#ff6347\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    };\r\n\r\n    // 패들 그리기\r\n    const drawPaddle = (ctx) => {\r\n        ctx.beginPath();\r\n        ctx.rect(paddleXRef.current, canvasHeight - paddleHeight, paddleWidth, paddleHeight);\r\n        ctx.fillStyle = \"#0095DD\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    };\r\n\r\n    // 벽돌 그리기 및 남은 벽돌 수 체크\r\n    const drawBricks = (ctx) => {\r\n        let remainingBricks = 0;\r\n        for (let c = 0; c < brickColumnCount; c++) {\r\n            for (let r = 0; r < brickRowCount; r++) {\r\n                const b = bricks[c][r];\r\n                if (b.status === 1) {\r\n                    remainingBricks++;\r\n                    const brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;\r\n                    const brickY = r * (brickHeight + brickPadding) + brickOffsetTop;\r\n                    b.x = brickX;\r\n                    b.y = brickY;\r\n\r\n                    // 기본 벽돌 스타일(색상)\r\n                    //   ctx.beginPath();\r\n                    //   ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n                    //   ctx.fillStyle = \"#fbbf24\";\r\n                    //   ctx.fill();\r\n                    //   ctx.closePath();\r\n\r\n                    // 🧱 이모지 스타일\r\n                    //   ctx.font = \"24px Arial\";\r\n                    //   ctx.textAlign = \"center\";\r\n                    //   ctx.textBaseline = \"middle\";\r\n                    //   ctx.fillText(\"🧱\", brickX + brickWidth / 2, brickY + brickHeight / 2);\r\n\r\n\r\n                    // 구멍난 벽돌\r\n                    // 벽돌 기본 사각형\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = \"#b91c1c\";\r\n                    ctx.fillRect(brickX, brickY, brickWidth, brickHeight);\r\n                    ctx.closePath();\r\n\r\n                    // 벽돌 구멍 3개\r\n                    const holeCount = 3;\r\n                    for (let i = 0; i < holeCount; i++) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(\r\n                            brickX + brickWidth * (0.2 + i * 0.3), // 0.2, 0.5, 0.8 위치\r\n                            brickY + brickHeight * 0.5,\r\n                            brickHeight * 0.2,\r\n                            0,\r\n                            Math.PI * 2\r\n                        );\r\n                        ctx.fillStyle = \"#1f1f1f\"; // 구멍 색\r\n                        ctx.fill();\r\n                        ctx.closePath();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 모든 벽돌 제거 시 클리어 처리\r\n        if (remainingBricks === 0 && !gameClear) {\r\n            setGameClear(true);\r\n        }\r\n    };\r\n\r\n    // 점수 그리기\r\n    // const drawScore = (ctx) => {\r\n    //     ctx.font = \"14px Arial\";\r\n    //     ctx.fillStyle = \"#ffffff\";\r\n    //     ctx.fillText(`Score: ${scoreRef.current}`, 8, 20);\r\n    // };\r\n\r\n    // 게임 화면 안 메시지 박스\r\n    const drawEndMessage = (ctx, message) => {\r\n        ctx.font = \"24px Arial\";\r\n        ctx.fillStyle = \"#ffffff\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(message, canvasWidth / 2, canvasHeight / 2);\r\n\r\n        // Restart 버튼 텍스트 안내\r\n        ctx.font = \"14px Arial\";\r\n        ctx.fillText(\"Press R to Restart\", canvasWidth / 2, canvasHeight / 2 + 30);\r\n    };\r\n\r\n    // 공과 벽돌 충돌 감지\r\n    const collisionDetection = () => {\r\n        for (let c = 0; c < brickColumnCount; c++) {\r\n            for (let r = 0; r < brickRowCount; r++) {\r\n                const b = bricks[c][r];\r\n                if (b.status === 1) {\r\n                    if (\r\n                        xRef.current > b.x &&\r\n                        xRef.current < b.x + brickWidth &&\r\n                        yRef.current > b.y &&\r\n                        yRef.current < b.y + brickHeight\r\n                    ) {\r\n                        dyRef.current = -dyRef.current;\r\n                        b.status = 0;\r\n                        scoreRef.current += 1;\r\n                        setScore(scoreRef.current);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // 키보드 이벤트 핸들러\r\n    const keyDownHandler = (e) => {\r\n        if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = true;\r\n        else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = true;\r\n        else if (e.key === \"r\" || e.key === \"R\") handleRestart();\r\n    };\r\n\r\n    const keyUpHandler = (e) => {\r\n        if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = false;\r\n        else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = false;\r\n    };\r\n\r\n    // 리스타트 버튼 클릭시 새로고침\r\n    const handleRestart = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        document.addEventListener(\"keydown\", keyDownHandler);\r\n        document.addEventListener(\"keyup\", keyUpHandler);\r\n\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            // drawScore(ctx);\r\n            drawBricks(ctx);\r\n            drawBall(ctx);\r\n            drawPaddle(ctx);\r\n            collisionDetection();\r\n\r\n            // 종료 메시지\r\n            if (gameOver) {\r\n                drawEndMessage(ctx, \"😢 GAME OVER\");\r\n                cancelAnimationFrame(animationRef.current);\r\n                return;\r\n            }\r\n\r\n            if (gameClear) {\r\n                drawEndMessage(ctx, \"🎉 CLEAR!!\");\r\n                cancelAnimationFrame(animationRef.current);\r\n                return;\r\n            }\r\n\r\n            // 벽 충돌 처리\r\n            if (\r\n                xRef.current + dxRef.current > canvasWidth - ballRadius ||\r\n                xRef.current + dxRef.current < ballRadius\r\n            ) dxRef.current = -dxRef.current;\r\n            if (yRef.current + dyRef.current < ballRadius) dyRef.current = -dyRef.current;\r\n            // 바닥 충돌 처리 (게임 오버)\r\n            else if (yRef.current + dyRef.current > canvasHeight - ballRadius) {\r\n                if (\r\n                    xRef.current > paddleXRef.current &&\r\n                    xRef.current < paddleXRef.current + paddleWidth\r\n                ) {\r\n                    dyRef.current = -dyRef.current;\r\n                } else {\r\n                    setGameOver(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // 키 입력에 따른 패들 이동\r\n            if (keys.current.right && paddleXRef.current < canvasWidth - paddleWidth)\r\n                paddleXRef.current += 5;\r\n            else if (keys.current.left && paddleXRef.current > 0)\r\n                paddleXRef.current -= 5;\r\n\r\n            // 공 이동\r\n            xRef.current += dxRef.current;\r\n            yRef.current += dyRef.current;\r\n\r\n            animationRef.current = requestAnimationFrame(draw);\r\n        };\r\n\r\n        draw();\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", keyDownHandler);\r\n            document.removeEventListener(\"keyup\", keyUpHandler);\r\n            cancelAnimationFrame(animationRef.current);\r\n        };\r\n    }, [gameOver, gameClear]);\r\n\r\n    return (\r\n        <div className=\"mt-8 flex flex-col items-center\">\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={canvasWidth}\r\n                height={canvasHeight}\r\n                className=\"bg-black rounded shadow-md\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}