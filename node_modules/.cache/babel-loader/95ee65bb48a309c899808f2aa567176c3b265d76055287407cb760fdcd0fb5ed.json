{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\games\\\\BrickBreaker.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BrickBreaker() {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 400,\n    height: 300\n  });\n\n  // 게임 설정값 (반응형)\n  const paddleWidth = canvasSize.width * 0.25;\n  const paddleHeight = canvasSize.height * 0.03;\n  const ballRadius = canvasSize.width * 0.025;\n\n  // 벽돌 설정값\n  const brickRowCount = 3;\n  const brickColumnCount = 6;\n  const brickPadding = 10;\n  const brickHeight = 20;\n\n  // 점수 및 게임 상태\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameClear, setGameClear] = useState(false);\n  const scoreRef = useRef(0);\n\n  // 공 상태 (x, y, 속도)\n  const xRef = useRef(canvasSize.width / 2);\n  const yRef = useRef(canvasSize.height - 60);\n  const dxRef = useRef(2);\n  const dyRef = useRef(-2);\n\n  // 패들 상태\n  const paddleXRef = useRef((canvasSize.width - paddleWidth) / 2);\n  const keys = useRef({\n    left: false,\n    right: false\n  });\n  const animationRef = useRef(null);\n  const bricks = useRef([]);\n\n  // 벽돌 초기화\n  useEffect(() => {\n    const brickWidth = (canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount;\n    const offsetLeft = (canvasSize.width - (brickColumnCount * brickWidth + (brickColumnCount - 1) * brickPadding)) / 2;\n    const newBricks = [];\n    for (let c = 0; c < brickColumnCount; c++) {\n      newBricks[c] = [];\n      for (let r = 0; r < brickRowCount; r++) {\n        const brickX = offsetLeft + c * (brickWidth + brickPadding);\n        const brickY = 30 + r * (brickHeight + brickPadding);\n        newBricks[c][r] = {\n          x: brickX,\n          y: brickY,\n          status: 1\n        };\n      }\n    }\n    bricks.current = newBricks;\n  }, [canvasSize]);\n\n  // 공 그리기 - 기본 스타일\n  // const drawBall = (ctx) => {\n  //     ctx.beginPath();\n  //     ctx.arc(xRef.current, yRef.current, ballRadius, 0, Math.PI * 2);\n  //     ctx.fillStyle = \"#ff6347\";\n  //     ctx.fill();\n  //     ctx.closePath();\n  // };\n\n  // 공 그리기 - 이모지 스타일\n  const drawBall = ctx => {\n    ctx.font = `${ballRadius * 2}px Arial`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"🐣\", xRef.current, yRef.current);\n  };\n\n  // 패들 그리기 - 기본\n  const drawPaddle = ctx => {\n    ctx.beginPath();\n    ctx.rect(paddleXRef.current, canvasRef.current.height - paddleHeight, paddleWidth, paddleHeight);\n    ctx.fillStyle = \"#fbbf24\"; // amber\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  // 패들 그리기 - 무지개\n  // const drawPaddle = (ctx) => {\n  //     const paddleX = paddleXRef.current;\n\n  //     const gradient = ctx.createLinearGradient(paddleX, canvasRef.current.height - paddleHeight, paddleX + paddleWidth, canvasRef.current.height);\n  //     gradient.addColorStop(0, \"#ff0000\");   // 빨강\n  //     gradient.addColorStop(0.17, \"#ffa500\"); // 주황\n  //     gradient.addColorStop(0.34, \"#ffff00\"); // 노랑\n  //     gradient.addColorStop(0.51, \"#00ff00\"); // 초록\n  //     gradient.addColorStop(0.68, \"#0000ff\"); // 파랑\n  //     gradient.addColorStop(0.85, \"#4b0082\"); // 남색\n  //     gradient.addColorStop(1, \"#ee82ee\");   // 보라\n\n  //     ctx.beginPath();\n  //     ctx.rect(paddleX, canvasRef.current.height - paddleHeight, paddleWidth, paddleHeight);\n  //     ctx.fillStyle = gradient;\n  //     ctx.fill();\n  //     ctx.closePath();\n  // };\n\n  // 벽돌 그리기 및 남은 벽돌 수 체크\n  const drawBricks = ctx => {\n    let remainingBricks = 0;\n    bricks.current.forEach(column => {\n      column.forEach(b => {\n        if (b.status === 1) {\n          remainingBricks++;\n          ctx.beginPath();\n          ctx.fillStyle = \"#b91c1c\";\n          ctx.fillRect(b.x, b.y, (canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount, brickHeight);\n          ctx.closePath();\n\n          // 기본 벽돌 스타일(색상)\n          //   ctx.beginPath();\n          //   ctx.rect(brickX, brickY, brickWidth, brickHeight);\n          //   ctx.fillStyle = \"#fbbf24\";\n          //   ctx.fill();\n          //   ctx.closePath();\n\n          // 🧱 이모지 스타일\n          //   ctx.font = \"24px Arial\";\n          //   ctx.textAlign = \"center\";\n          //   ctx.textBaseline = \"middle\";\n          //   ctx.fillText(\"🧱\", brickX + brickWidth / 2, brickY + brickHeight / 2);\n\n          // 구멍난 벽돌\n          for (let i = 0; i < 3; i++) {\n            ctx.beginPath();\n            ctx.arc(b.x + (canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount * (0.2 + i * 0.3), b.y + brickHeight * 0.5, brickHeight * 0.2, 0, Math.PI * 2);\n            ctx.fillStyle = \"#1f1f1f\";\n            ctx.fill();\n            ctx.closePath();\n          }\n        }\n      });\n    });\n\n    // 모든 벽돌 제거 시 클리어 처리\n    if (remainingBricks === 0 && !gameClear) {\n      setGameClear(true);\n    }\n  };\n\n  // 게임 화면 안 메시지 박스\n  const drawEndMessage = (ctx, message) => {\n    const centerX = canvasRef.current.width / 2;\n    const centerY = canvasRef.current.height / 2;\n    ctx.font = \"24px Arial\";\n    ctx.fillStyle = \"#ffffff\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(message, centerX, centerY - 20);\n\n    // 버튼 클릭 메시지\n    ctx.font = \"18px Arial\";\n    ctx.fillStyle = \"#818cf8\";\n    ctx.fillText(\"Tap or Press R to Restart\", centerX, centerY + 10);\n    ctx.fillText(\"🔄\", centerX, centerY + 40);\n  };\n\n  // 공과 벽돌 충돌 감지\n  const collisionDetection = () => {\n    const brickWidth = (canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount;\n    bricks.current.forEach(column => {\n      column.forEach(b => {\n        if (b.status === 1) {\n          if (xRef.current > b.x && xRef.current < b.x + brickWidth && yRef.current > b.y && yRef.current < b.y + brickHeight) {\n            // 공 속도가 매 충돌마다 5%씩 빨라짐 + 최대 속도 제한\n            const speedFactor = 1.05;\n            const maxSpeed = 10;\n            dxRef.current = Math.max(-maxSpeed, Math.min(maxSpeed, dxRef.current * speedFactor));\n            dyRef.current = Math.max(-maxSpeed, Math.min(maxSpeed, dyRef.current * -speedFactor));\n            b.status = 0;\n            scoreRef.current++;\n            setScore(scoreRef.current);\n          }\n        }\n      });\n    });\n  };\n\n  // 키보드 이벤트 핸들러\n  const handleRestart = () => {\n    // GA 리스타트 추적\n    if (window.gtag) {\n      window.gtag('event', 'game_restart', {\n        event_category: 'Game',\n        event_label: 'BrickBreaker'\n      });\n    }\n    window.location.reload();\n  };\n  const keyDownHandler = e => {\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = true;else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = true;else if (e.key === \"r\" || e.key === \"R\") handleRestart();\n  };\n  const keyUpHandler = e => {\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = false;else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = false;\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    document.addEventListener(\"keydown\", keyDownHandler);\n    document.addEventListener(\"keyup\", keyUpHandler);\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawBricks(ctx);\n      drawBall(ctx);\n      drawPaddle(ctx);\n      collisionDetection();\n\n      // 종료 메시지\n      if (gameOver) {\n        drawEndMessage(ctx, \"😢 GAME OVER\");\n        cancelAnimationFrame(animationRef.current);\n        return;\n      }\n      if (gameClear) {\n        // GA 게임 클리어 추적\n        if (window.gtag) {\n          window.gtag('event', 'game_clear', {\n            event_category: 'Game',\n            event_label: 'BrickBreaker'\n          });\n        }\n\n        // 클리어 메시지지\n        drawEndMessage(ctx, \"🎉 CLEAR!!\");\n        cancelAnimationFrame(animationRef.current);\n        return;\n      }\n\n      // 벽 충돌 처리\n      const nextX = xRef.current + dxRef.current;\n      const nextY = yRef.current + dyRef.current;\n      if (nextX + ballRadius > canvas.width || nextX - ballRadius < 0) {\n        dxRef.current = -dxRef.current;\n      }\n      if (nextY - ballRadius < 0) {\n        dyRef.current = -dyRef.current;\n      }\n\n      // 바닥 충돌 + 패들 반사 처리\n      if (nextY + ballRadius > canvas.height) {\n        if (xRef.current > paddleXRef.current && xRef.current < paddleXRef.current + paddleWidth) {\n          dyRef.current = -dyRef.current;\n        } else {\n          setGameOver(true);\n          return;\n        }\n      }\n\n      // 키 입력에 따른 패들 이동\n      if (keys.current.right && paddleXRef.current < canvas.width - paddleWidth) {\n        paddleXRef.current += 5;\n      } else if (keys.current.left && paddleXRef.current > 0) {\n        paddleXRef.current -= 5;\n      }\n\n      // 공 이동\n      xRef.current += dxRef.current;\n      yRef.current += dyRef.current;\n      animationRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      document.removeEventListener(\"keydown\", keyDownHandler);\n      document.removeEventListener(\"keyup\", keyUpHandler);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [gameOver, gameClear, canvasSize, paddleWidth]);\n\n  // 반응형 화면 추가\n  useEffect(() => {\n    const updateSize = () => {\n      const screenWidth = window.innerWidth;\n      const width = Math.min(screenWidth - 10, 480);\n      const height = Math.round(width * 0.75);\n      setCanvasSize({\n        width,\n        height\n      });\n    };\n    updateSize(); // 처음 실행\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n\n  // 모바일 화면 터치\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const handleTouchMove = e => {\n      const touchX = e.touches[0].clientX - canvas.getBoundingClientRect().left;\n      paddleXRef.current = Math.min(Math.max(touchX - paddleWidth / 2, 0), canvas.width - paddleWidth);\n    };\n    canvas.addEventListener(\"touchmove\", handleTouchMove);\n    return () => canvas.removeEventListener(\"touchmove\", handleTouchMove);\n  }, [paddleWidth]);\n\n  // 터치 or 클릭 시 해당 위치 누르면 restart\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const handleClick = e => {\n      if (!gameOver && !gameClear) return;\n      const rect = canvas.getBoundingClientRect();\n      const clickX = e.clientX - rect.left;\n      const clickY = e.clientY - rect.top;\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2 + 20;\n      const textWidth = 150;\n      const textHeight = 30;\n      if (clickX > centerX - textWidth / 2 && clickX < centerX + textWidth / 2 && clickY > centerY - textHeight / 2 && clickY < centerY + textHeight / 2) {\n        window.location.reload();\n      }\n    };\n    canvas.addEventListener(\"click\", handleClick);\n    canvas.addEventListener(\"touchstart\", handleClick);\n    return () => {\n      canvas.removeEventListener(\"click\", handleClick);\n      canvas.removeEventListener(\"touchstart\", handleClick);\n    };\n  }, [gameOver, gameClear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 flex flex-col items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      className: \"bg-black rounded shadow-md w-full max-w-none touch-none\",\n      style: {\n        width: '100%',\n        height: 'auto',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 9\n  }, this);\n}\n_s(BrickBreaker, \"04oHq6j1UL4NstQufOncUVPt0E0=\");\n_c = BrickBreaker;\nvar _c;\n$RefreshReg$(_c, \"BrickBreaker\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","BrickBreaker","_s","canvasRef","canvasSize","setCanvasSize","width","height","paddleWidth","paddleHeight","ballRadius","brickRowCount","brickColumnCount","brickPadding","brickHeight","score","setScore","gameOver","setGameOver","gameClear","setGameClear","scoreRef","xRef","yRef","dxRef","dyRef","paddleXRef","keys","left","right","animationRef","bricks","brickWidth","offsetLeft","newBricks","c","r","brickX","brickY","x","y","status","current","drawBall","ctx","font","textAlign","textBaseline","fillText","drawPaddle","beginPath","rect","fillStyle","fill","closePath","drawBricks","remainingBricks","forEach","column","b","fillRect","i","arc","Math","PI","drawEndMessage","message","centerX","centerY","collisionDetection","speedFactor","maxSpeed","max","min","handleRestart","window","gtag","event_category","event_label","location","reload","keyDownHandler","e","key","keyUpHandler","canvas","getContext","document","addEventListener","draw","clearRect","cancelAnimationFrame","nextX","nextY","requestAnimationFrame","removeEventListener","updateSize","screenWidth","innerWidth","round","handleTouchMove","touchX","touches","clientX","getBoundingClientRect","handleClick","clickX","clickY","clientY","top","textWidth","textHeight","className","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/games/BrickBreaker.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function BrickBreaker() {\r\n    const canvasRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 400, height: 300 });\r\n\r\n    // 게임 설정값 (반응형)\r\n    const paddleWidth = canvasSize.width * 0.25;\r\n    const paddleHeight = canvasSize.height * 0.03;\r\n    const ballRadius = canvasSize.width * 0.025;\r\n\r\n    // 벽돌 설정값\r\n    const brickRowCount = 3;\r\n    const brickColumnCount = 6;\r\n    const brickPadding = 10;\r\n    const brickHeight = 20;\r\n\r\n    // 점수 및 게임 상태\r\n    const [score, setScore] = useState(0);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [gameClear, setGameClear] = useState(false);\r\n    const scoreRef = useRef(0);\r\n\r\n    // 공 상태 (x, y, 속도)\r\n    const xRef = useRef(canvasSize.width / 2);\r\n    const yRef = useRef(canvasSize.height - 60);\r\n    const dxRef = useRef(2);\r\n    const dyRef = useRef(-2);\r\n\r\n    // 패들 상태\r\n    const paddleXRef = useRef((canvasSize.width - paddleWidth) / 2);\r\n    const keys = useRef({ left: false, right: false });\r\n    const animationRef = useRef(null);\r\n\r\n    const bricks = useRef([]);\r\n\r\n    // 벽돌 초기화\r\n    useEffect(() => {\r\n        const brickWidth = (canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount;\r\n        const offsetLeft = (canvasSize.width - (brickColumnCount * brickWidth + (brickColumnCount - 1) * brickPadding)) / 2;\r\n\r\n        const newBricks = [];\r\n        for (let c = 0; c < brickColumnCount; c++) {\r\n            newBricks[c] = [];\r\n            for (let r = 0; r < brickRowCount; r++) {\r\n                const brickX = offsetLeft + c * (brickWidth + brickPadding);\r\n                const brickY = 30 + r * (brickHeight + brickPadding);\r\n                newBricks[c][r] = { x: brickX, y: brickY, status: 1 };\r\n            }\r\n        }\r\n        bricks.current = newBricks;\r\n    }, [canvasSize]);\r\n\r\n    // 공 그리기 - 기본 스타일\r\n    // const drawBall = (ctx) => {\r\n    //     ctx.beginPath();\r\n    //     ctx.arc(xRef.current, yRef.current, ballRadius, 0, Math.PI * 2);\r\n    //     ctx.fillStyle = \"#ff6347\";\r\n    //     ctx.fill();\r\n    //     ctx.closePath();\r\n    // };\r\n\r\n    // 공 그리기 - 이모지 스타일\r\n    const drawBall = (ctx) => {\r\n        ctx.font = `${ballRadius * 2}px Arial`;\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.fillText(\"🐣\", xRef.current, yRef.current);\r\n    };\r\n\r\n    // 패들 그리기 - 기본\r\n    const drawPaddle = (ctx) => {\r\n        ctx.beginPath();\r\n        ctx.rect(\r\n            paddleXRef.current,\r\n            canvasRef.current.height - paddleHeight,\r\n            paddleWidth,\r\n            paddleHeight\r\n        );\r\n        ctx.fillStyle = \"#fbbf24\";   // amber\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    };\r\n\r\n    // 패들 그리기 - 무지개\r\n    // const drawPaddle = (ctx) => {\r\n    //     const paddleX = paddleXRef.current;\r\n\r\n    //     const gradient = ctx.createLinearGradient(paddleX, canvasRef.current.height - paddleHeight, paddleX + paddleWidth, canvasRef.current.height);\r\n    //     gradient.addColorStop(0, \"#ff0000\");   // 빨강\r\n    //     gradient.addColorStop(0.17, \"#ffa500\"); // 주황\r\n    //     gradient.addColorStop(0.34, \"#ffff00\"); // 노랑\r\n    //     gradient.addColorStop(0.51, \"#00ff00\"); // 초록\r\n    //     gradient.addColorStop(0.68, \"#0000ff\"); // 파랑\r\n    //     gradient.addColorStop(0.85, \"#4b0082\"); // 남색\r\n    //     gradient.addColorStop(1, \"#ee82ee\");   // 보라\r\n\r\n    //     ctx.beginPath();\r\n    //     ctx.rect(paddleX, canvasRef.current.height - paddleHeight, paddleWidth, paddleHeight);\r\n    //     ctx.fillStyle = gradient;\r\n    //     ctx.fill();\r\n    //     ctx.closePath();\r\n    // };\r\n\r\n\r\n    // 벽돌 그리기 및 남은 벽돌 수 체크\r\n    const drawBricks = (ctx) => {\r\n        let remainingBricks = 0;\r\n        bricks.current.forEach((column) => {\r\n            column.forEach((b) => {\r\n                if (b.status === 1) {\r\n                    remainingBricks++;\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = \"#b91c1c\";\r\n                    ctx.fillRect(b.x, b.y, (canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount, brickHeight);\r\n                    ctx.closePath();\r\n\r\n                    // 기본 벽돌 스타일(색상)\r\n                    //   ctx.beginPath();\r\n                    //   ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n                    //   ctx.fillStyle = \"#fbbf24\";\r\n                    //   ctx.fill();\r\n                    //   ctx.closePath();\r\n\r\n                    // 🧱 이모지 스타일\r\n                    //   ctx.font = \"24px Arial\";\r\n                    //   ctx.textAlign = \"center\";\r\n                    //   ctx.textBaseline = \"middle\";\r\n                    //   ctx.fillText(\"🧱\", brickX + brickWidth / 2, brickY + brickHeight / 2);\r\n\r\n                    // 구멍난 벽돌\r\n                    for (let i = 0; i < 3; i++) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(\r\n                            b.x + ((canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount) * (0.2 + i * 0.3),\r\n                            b.y + brickHeight * 0.5,\r\n                            brickHeight * 0.2,\r\n                            0,\r\n                            Math.PI * 2\r\n                        );\r\n                        ctx.fillStyle = \"#1f1f1f\";\r\n                        ctx.fill();\r\n                        ctx.closePath();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // 모든 벽돌 제거 시 클리어 처리\r\n        if (remainingBricks === 0 && !gameClear) {\r\n            setGameClear(true);\r\n        }\r\n    };\r\n\r\n    // 게임 화면 안 메시지 박스\r\n    const drawEndMessage = (ctx, message) => {\r\n        const centerX = canvasRef.current.width / 2;\r\n        const centerY = canvasRef.current.height / 2;\r\n\r\n        ctx.font = \"24px Arial\";\r\n        ctx.fillStyle = \"#ffffff\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(message, centerX, centerY - 20);\r\n\r\n        // 버튼 클릭 메시지\r\n        ctx.font = \"18px Arial\";\r\n        ctx.fillStyle = \"#818cf8\";\r\n        ctx.fillText(\"Tap or Press R to Restart\", centerX, centerY + 10);\r\n        ctx.fillText(\"🔄\", centerX, centerY + 40);\r\n    };\r\n\r\n    // 공과 벽돌 충돌 감지\r\n    const collisionDetection = () => {\r\n        const brickWidth = (canvasSize.width - (brickColumnCount + 1) * brickPadding) / brickColumnCount;\r\n        bricks.current.forEach((column) => {\r\n            column.forEach((b) => {\r\n                if (b.status === 1) {\r\n                    if (\r\n                        xRef.current > b.x &&\r\n                        xRef.current < b.x + brickWidth &&\r\n                        yRef.current > b.y &&\r\n                        yRef.current < b.y + brickHeight\r\n                    ) { // 공 속도가 매 충돌마다 5%씩 빨라짐 + 최대 속도 제한\r\n                        const speedFactor = 1.05;\r\n                        const maxSpeed = 10;\r\n\r\n                        dxRef.current = Math.max(-maxSpeed, Math.min(maxSpeed, dxRef.current * speedFactor));\r\n                        dyRef.current = Math.max(-maxSpeed, Math.min(maxSpeed, dyRef.current * -speedFactor));\r\n\r\n                        b.status = 0;\r\n                        scoreRef.current++;\r\n                        setScore(scoreRef.current);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // 키보드 이벤트 핸들러\r\n    const handleRestart = () => {\r\n        // GA 리스타트 추적\r\n        if (window.gtag) {\r\n            window.gtag('event', 'game_restart', {\r\n                event_category: 'Game',\r\n                event_label: 'BrickBreaker'\r\n            });\r\n        }\r\n\r\n        window.location.reload();\r\n    }\r\n    const keyDownHandler = (e) => {\r\n        if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = true;\r\n        else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = true;\r\n        else if (e.key === \"r\" || e.key === \"R\") handleRestart();\r\n    };\r\n\r\n    const keyUpHandler = (e) => {\r\n        if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = false;\r\n        else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = false;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        document.addEventListener(\"keydown\", keyDownHandler);\r\n        document.addEventListener(\"keyup\", keyUpHandler);\r\n\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            drawBricks(ctx);\r\n            drawBall(ctx);\r\n            drawPaddle(ctx);\r\n            collisionDetection();\r\n\r\n            // 종료 메시지\r\n            if (gameOver) {\r\n                drawEndMessage(ctx, \"😢 GAME OVER\");\r\n                cancelAnimationFrame(animationRef.current);\r\n                return;\r\n            }\r\n            if (gameClear) {\r\n                // GA 게임 클리어 추적\r\n                if (window.gtag) {\r\n                    window.gtag('event', 'game_clear', {\r\n                        event_category: 'Game',\r\n                        event_label: 'BrickBreaker'\r\n                    });\r\n                }\r\n\r\n                // 클리어 메시지지\r\n                drawEndMessage(ctx, \"🎉 CLEAR!!\");\r\n                cancelAnimationFrame(animationRef.current);\r\n                return;\r\n            }\r\n\r\n            // 벽 충돌 처리\r\n            const nextX = xRef.current + dxRef.current;\r\n            const nextY = yRef.current + dyRef.current;\r\n\r\n            if (nextX + ballRadius > canvas.width || nextX - ballRadius < 0) {\r\n                dxRef.current = -dxRef.current;\r\n            }\r\n            if (nextY - ballRadius < 0) {\r\n                dyRef.current = -dyRef.current;\r\n            }\r\n\r\n            // 바닥 충돌 + 패들 반사 처리\r\n            if (nextY + ballRadius > canvas.height) {\r\n                if (\r\n                    xRef.current > paddleXRef.current &&\r\n                    xRef.current < paddleXRef.current + paddleWidth\r\n                ) {\r\n                    dyRef.current = -dyRef.current;\r\n                } else {\r\n                    setGameOver(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // 키 입력에 따른 패들 이동\r\n            if (keys.current.right && paddleXRef.current < canvas.width - paddleWidth) {\r\n                paddleXRef.current += 5;\r\n            } else if (keys.current.left && paddleXRef.current > 0) {\r\n                paddleXRef.current -= 5;\r\n            }\r\n\r\n            // 공 이동\r\n            xRef.current += dxRef.current;\r\n            yRef.current += dyRef.current;\r\n\r\n            animationRef.current = requestAnimationFrame(draw);\r\n        };\r\n\r\n        draw();\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", keyDownHandler);\r\n            document.removeEventListener(\"keyup\", keyUpHandler);\r\n            cancelAnimationFrame(animationRef.current);\r\n        };\r\n    }, [gameOver, gameClear, canvasSize, paddleWidth]);\r\n\r\n    // 반응형 화면 추가\r\n    useEffect(() => {\r\n        const updateSize = () => {\r\n            const screenWidth = window.innerWidth;\r\n            const width = Math.min(screenWidth - 10, 480);\r\n            const height = Math.round(width * 0.75);\r\n            setCanvasSize({ width, height });\r\n        };\r\n        updateSize();   // 처음 실행\r\n        window.addEventListener(\"resize\", updateSize);\r\n        return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n\r\n    // 모바일 화면 터치\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const handleTouchMove = (e) => {\r\n            const touchX = e.touches[0].clientX - canvas.getBoundingClientRect().left;\r\n            paddleXRef.current = Math.min(\r\n                Math.max(touchX - paddleWidth / 2, 0),\r\n                canvas.width - paddleWidth\r\n            );\r\n        };\r\n        canvas.addEventListener(\"touchmove\", handleTouchMove);\r\n        return () => canvas.removeEventListener(\"touchmove\", handleTouchMove);\r\n    }, [paddleWidth]);\r\n\r\n    // 터치 or 클릭 시 해당 위치 누르면 restart\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n\r\n        const handleClick = (e) => {\r\n            if (!gameOver && !gameClear) return;\r\n\r\n            const rect = canvas.getBoundingClientRect();\r\n            const clickX = e.clientX - rect.left;\r\n            const clickY = e.clientY - rect.top;\r\n\r\n            const centerX = canvas.width / 2;\r\n            const centerY = canvas.height / 2 + 20;\r\n\r\n            const textWidth = 150;\r\n            const textHeight = 30;\r\n\r\n            if (\r\n                clickX > centerX - textWidth / 2 &&\r\n                clickX < centerX + textWidth / 2 &&\r\n                clickY > centerY - textHeight / 2 &&\r\n                clickY < centerY + textHeight / 2\r\n            ) {\r\n                window.location.reload();\r\n            }\r\n        };\r\n\r\n        canvas.addEventListener(\"click\", handleClick);\r\n        canvas.addEventListener(\"touchstart\", handleClick);\r\n\r\n        return () => {\r\n            canvas.removeEventListener(\"click\", handleClick);\r\n            canvas.removeEventListener(\"touchstart\", handleClick);\r\n        };\r\n    }, [gameOver, gameClear]);\r\n\r\n    return (\r\n        <div className=\"mt-8 flex flex-col items-center\">\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={canvasSize.width}\r\n                height={canvasSize.height}\r\n                className=\"bg-black rounded shadow-md w-full max-w-none touch-none\"\r\n                style={{ width: '100%', height: 'auto', display: 'block' }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;;EAEzE;EACA,MAAMC,WAAW,GAAGJ,UAAU,CAACE,KAAK,GAAG,IAAI;EAC3C,MAAMG,YAAY,GAAGL,UAAU,CAACG,MAAM,GAAG,IAAI;EAC7C,MAAMG,UAAU,GAAGN,UAAU,CAACE,KAAK,GAAG,KAAK;;EAE3C;EACA,MAAMK,aAAa,GAAG,CAAC;EACvB,MAAMC,gBAAgB,GAAG,CAAC;EAC1B,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,WAAW,GAAG,EAAE;;EAEtB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMuB,QAAQ,GAAGxB,MAAM,CAAC,CAAC,CAAC;;EAE1B;EACA,MAAMyB,IAAI,GAAGzB,MAAM,CAACO,UAAU,CAACE,KAAK,GAAG,CAAC,CAAC;EACzC,MAAMiB,IAAI,GAAG1B,MAAM,CAACO,UAAU,CAACG,MAAM,GAAG,EAAE,CAAC;EAC3C,MAAMiB,KAAK,GAAG3B,MAAM,CAAC,CAAC,CAAC;EACvB,MAAM4B,KAAK,GAAG5B,MAAM,CAAC,CAAC,CAAC,CAAC;;EAExB;EACA,MAAM6B,UAAU,GAAG7B,MAAM,CAAC,CAACO,UAAU,CAACE,KAAK,GAAGE,WAAW,IAAI,CAAC,CAAC;EAC/D,MAAMmB,IAAI,GAAG9B,MAAM,CAAC;IAAE+B,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,CAAC;EAClD,MAAMC,YAAY,GAAGjC,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMkC,MAAM,GAAGlC,MAAM,CAAC,EAAE,CAAC;;EAEzB;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMoC,UAAU,GAAG,CAAC5B,UAAU,CAACE,KAAK,GAAG,CAACM,gBAAgB,GAAG,CAAC,IAAIC,YAAY,IAAID,gBAAgB;IAChG,MAAMqB,UAAU,GAAG,CAAC7B,UAAU,CAACE,KAAK,IAAIM,gBAAgB,GAAGoB,UAAU,GAAG,CAACpB,gBAAgB,GAAG,CAAC,IAAIC,YAAY,CAAC,IAAI,CAAC;IAEnH,MAAMqB,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,gBAAgB,EAAEuB,CAAC,EAAE,EAAE;MACvCD,SAAS,CAACC,CAAC,CAAC,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,aAAa,EAAEyB,CAAC,EAAE,EAAE;QACpC,MAAMC,MAAM,GAAGJ,UAAU,GAAGE,CAAC,IAAIH,UAAU,GAAGnB,YAAY,CAAC;QAC3D,MAAMyB,MAAM,GAAG,EAAE,GAAGF,CAAC,IAAItB,WAAW,GAAGD,YAAY,CAAC;QACpDqB,SAAS,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG;UAAEG,CAAC,EAAEF,MAAM;UAAEG,CAAC,EAAEF,MAAM;UAAEG,MAAM,EAAE;QAAE,CAAC;MACzD;IACJ;IACAV,MAAM,CAACW,OAAO,GAAGR,SAAS;EAC9B,CAAC,EAAE,CAAC9B,UAAU,CAAC,CAAC;;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMuC,QAAQ,GAAIC,GAAG,IAAK;IACtBA,GAAG,CAACC,IAAI,GAAG,GAAGnC,UAAU,GAAG,CAAC,UAAU;IACtCkC,GAAG,CAACE,SAAS,GAAG,QAAQ;IACxBF,GAAG,CAACG,YAAY,GAAG,QAAQ;IAC3BH,GAAG,CAACI,QAAQ,CAAC,IAAI,EAAE1B,IAAI,CAACoB,OAAO,EAAEnB,IAAI,CAACmB,OAAO,CAAC;EAClD,CAAC;;EAED;EACA,MAAMO,UAAU,GAAIL,GAAG,IAAK;IACxBA,GAAG,CAACM,SAAS,CAAC,CAAC;IACfN,GAAG,CAACO,IAAI,CACJzB,UAAU,CAACgB,OAAO,EAClBvC,SAAS,CAACuC,OAAO,CAACnC,MAAM,GAAGE,YAAY,EACvCD,WAAW,EACXC,YACJ,CAAC;IACDmC,GAAG,CAACQ,SAAS,GAAG,SAAS,CAAC,CAAG;IAC7BR,GAAG,CAACS,IAAI,CAAC,CAAC;IACVT,GAAG,CAACU,SAAS,CAAC,CAAC;EACnB,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA,MAAMC,UAAU,GAAIX,GAAG,IAAK;IACxB,IAAIY,eAAe,GAAG,CAAC;IACvBzB,MAAM,CAACW,OAAO,CAACe,OAAO,CAAEC,MAAM,IAAK;MAC/BA,MAAM,CAACD,OAAO,CAAEE,CAAC,IAAK;QAClB,IAAIA,CAAC,CAAClB,MAAM,KAAK,CAAC,EAAE;UAChBe,eAAe,EAAE;UACjBZ,GAAG,CAACM,SAAS,CAAC,CAAC;UACfN,GAAG,CAACQ,SAAS,GAAG,SAAS;UACzBR,GAAG,CAACgB,QAAQ,CAACD,CAAC,CAACpB,CAAC,EAAEoB,CAAC,CAACnB,CAAC,EAAE,CAACpC,UAAU,CAACE,KAAK,GAAG,CAACM,gBAAgB,GAAG,CAAC,IAAIC,YAAY,IAAID,gBAAgB,EAAEE,WAAW,CAAC;UAClH8B,GAAG,CAACU,SAAS,CAAC,CAAC;;UAEf;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA;UACA;UACA;;UAEA;UACA,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;YACxBjB,GAAG,CAACM,SAAS,CAAC,CAAC;YACfN,GAAG,CAACkB,GAAG,CACHH,CAAC,CAACpB,CAAC,GAAI,CAACnC,UAAU,CAACE,KAAK,GAAG,CAACM,gBAAgB,GAAG,CAAC,IAAIC,YAAY,IAAID,gBAAgB,IAAK,GAAG,GAAGiD,CAAC,GAAG,GAAG,CAAC,EACvGF,CAAC,CAACnB,CAAC,GAAG1B,WAAW,GAAG,GAAG,EACvBA,WAAW,GAAG,GAAG,EACjB,CAAC,EACDiD,IAAI,CAACC,EAAE,GAAG,CACd,CAAC;YACDpB,GAAG,CAACQ,SAAS,GAAG,SAAS;YACzBR,GAAG,CAACS,IAAI,CAAC,CAAC;YACVT,GAAG,CAACU,SAAS,CAAC,CAAC;UACnB;QACJ;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;;IAEF;IACA,IAAIE,eAAe,KAAK,CAAC,IAAI,CAACrC,SAAS,EAAE;MACrCC,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAM6C,cAAc,GAAGA,CAACrB,GAAG,EAAEsB,OAAO,KAAK;IACrC,MAAMC,OAAO,GAAGhE,SAAS,CAACuC,OAAO,CAACpC,KAAK,GAAG,CAAC;IAC3C,MAAM8D,OAAO,GAAGjE,SAAS,CAACuC,OAAO,CAACnC,MAAM,GAAG,CAAC;IAE5CqC,GAAG,CAACC,IAAI,GAAG,YAAY;IACvBD,GAAG,CAACQ,SAAS,GAAG,SAAS;IACzBR,GAAG,CAACE,SAAS,GAAG,QAAQ;IACxBF,GAAG,CAACI,QAAQ,CAACkB,OAAO,EAAEC,OAAO,EAAEC,OAAO,GAAG,EAAE,CAAC;;IAE5C;IACAxB,GAAG,CAACC,IAAI,GAAG,YAAY;IACvBD,GAAG,CAACQ,SAAS,GAAG,SAAS;IACzBR,GAAG,CAACI,QAAQ,CAAC,2BAA2B,EAAEmB,OAAO,EAAEC,OAAO,GAAG,EAAE,CAAC;IAChExB,GAAG,CAACI,QAAQ,CAAC,IAAI,EAAEmB,OAAO,EAAEC,OAAO,GAAG,EAAE,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,MAAMrC,UAAU,GAAG,CAAC5B,UAAU,CAACE,KAAK,GAAG,CAACM,gBAAgB,GAAG,CAAC,IAAIC,YAAY,IAAID,gBAAgB;IAChGmB,MAAM,CAACW,OAAO,CAACe,OAAO,CAAEC,MAAM,IAAK;MAC/BA,MAAM,CAACD,OAAO,CAAEE,CAAC,IAAK;QAClB,IAAIA,CAAC,CAAClB,MAAM,KAAK,CAAC,EAAE;UAChB,IACInB,IAAI,CAACoB,OAAO,GAAGiB,CAAC,CAACpB,CAAC,IAClBjB,IAAI,CAACoB,OAAO,GAAGiB,CAAC,CAACpB,CAAC,GAAGP,UAAU,IAC/BT,IAAI,CAACmB,OAAO,GAAGiB,CAAC,CAACnB,CAAC,IAClBjB,IAAI,CAACmB,OAAO,GAAGiB,CAAC,CAACnB,CAAC,GAAG1B,WAAW,EAClC;YAAE;YACA,MAAMwD,WAAW,GAAG,IAAI;YACxB,MAAMC,QAAQ,GAAG,EAAE;YAEnB/C,KAAK,CAACkB,OAAO,GAAGqB,IAAI,CAACS,GAAG,CAAC,CAACD,QAAQ,EAAER,IAAI,CAACU,GAAG,CAACF,QAAQ,EAAE/C,KAAK,CAACkB,OAAO,GAAG4B,WAAW,CAAC,CAAC;YACpF7C,KAAK,CAACiB,OAAO,GAAGqB,IAAI,CAACS,GAAG,CAAC,CAACD,QAAQ,EAAER,IAAI,CAACU,GAAG,CAACF,QAAQ,EAAE9C,KAAK,CAACiB,OAAO,GAAG,CAAC4B,WAAW,CAAC,CAAC;YAErFX,CAAC,CAAClB,MAAM,GAAG,CAAC;YACZpB,QAAQ,CAACqB,OAAO,EAAE;YAClB1B,QAAQ,CAACK,QAAQ,CAACqB,OAAO,CAAC;UAC9B;QACJ;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMgC,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA,IAAIC,MAAM,CAACC,IAAI,EAAE;MACbD,MAAM,CAACC,IAAI,CAAC,OAAO,EAAE,cAAc,EAAE;QACjCC,cAAc,EAAE,MAAM;QACtBC,WAAW,EAAE;MACjB,CAAC,CAAC;IACN;IAEAH,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC5B,CAAC;EACD,MAAMC,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,YAAY,EAAExD,IAAI,CAACe,OAAO,CAACb,KAAK,GAAG,IAAI,CAAC,KACtE,IAAIqD,CAAC,CAACC,GAAG,KAAK,MAAM,IAAID,CAAC,CAACC,GAAG,KAAK,WAAW,EAAExD,IAAI,CAACe,OAAO,CAACd,IAAI,GAAG,IAAI,CAAC,KACxE,IAAIsD,CAAC,CAACC,GAAG,KAAK,GAAG,IAAID,CAAC,CAACC,GAAG,KAAK,GAAG,EAAET,aAAa,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMU,YAAY,GAAIF,CAAC,IAAK;IACxB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,YAAY,EAAExD,IAAI,CAACe,OAAO,CAACb,KAAK,GAAG,KAAK,CAAC,KACvE,IAAIqD,CAAC,CAACC,GAAG,KAAK,MAAM,IAAID,CAAC,CAACC,GAAG,KAAK,WAAW,EAAExD,IAAI,CAACe,OAAO,CAACd,IAAI,GAAG,KAAK;EACjF,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZ,MAAMyF,MAAM,GAAGlF,SAAS,CAACuC,OAAO;IAChC,MAAME,GAAG,GAAGyC,MAAM,CAACC,UAAU,CAAC,IAAI,CAAC;IAEnCC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEP,cAAc,CAAC;IACpDM,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEJ,YAAY,CAAC;IAEhD,MAAMK,IAAI,GAAGA,CAAA,KAAM;MACf7C,GAAG,CAAC8C,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAAC/E,KAAK,EAAE+E,MAAM,CAAC9E,MAAM,CAAC;MAChDgD,UAAU,CAACX,GAAG,CAAC;MACfD,QAAQ,CAACC,GAAG,CAAC;MACbK,UAAU,CAACL,GAAG,CAAC;MACfyB,kBAAkB,CAAC,CAAC;;MAEpB;MACA,IAAIpD,QAAQ,EAAE;QACVgD,cAAc,CAACrB,GAAG,EAAE,cAAc,CAAC;QACnC+C,oBAAoB,CAAC7D,YAAY,CAACY,OAAO,CAAC;QAC1C;MACJ;MACA,IAAIvB,SAAS,EAAE;QACX;QACA,IAAIwD,MAAM,CAACC,IAAI,EAAE;UACbD,MAAM,CAACC,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE;YAC/BC,cAAc,EAAE,MAAM;YACtBC,WAAW,EAAE;UACjB,CAAC,CAAC;QACN;;QAEA;QACAb,cAAc,CAACrB,GAAG,EAAE,YAAY,CAAC;QACjC+C,oBAAoB,CAAC7D,YAAY,CAACY,OAAO,CAAC;QAC1C;MACJ;;MAEA;MACA,MAAMkD,KAAK,GAAGtE,IAAI,CAACoB,OAAO,GAAGlB,KAAK,CAACkB,OAAO;MAC1C,MAAMmD,KAAK,GAAGtE,IAAI,CAACmB,OAAO,GAAGjB,KAAK,CAACiB,OAAO;MAE1C,IAAIkD,KAAK,GAAGlF,UAAU,GAAG2E,MAAM,CAAC/E,KAAK,IAAIsF,KAAK,GAAGlF,UAAU,GAAG,CAAC,EAAE;QAC7Dc,KAAK,CAACkB,OAAO,GAAG,CAAClB,KAAK,CAACkB,OAAO;MAClC;MACA,IAAImD,KAAK,GAAGnF,UAAU,GAAG,CAAC,EAAE;QACxBe,KAAK,CAACiB,OAAO,GAAG,CAACjB,KAAK,CAACiB,OAAO;MAClC;;MAEA;MACA,IAAImD,KAAK,GAAGnF,UAAU,GAAG2E,MAAM,CAAC9E,MAAM,EAAE;QACpC,IACIe,IAAI,CAACoB,OAAO,GAAGhB,UAAU,CAACgB,OAAO,IACjCpB,IAAI,CAACoB,OAAO,GAAGhB,UAAU,CAACgB,OAAO,GAAGlC,WAAW,EACjD;UACEiB,KAAK,CAACiB,OAAO,GAAG,CAACjB,KAAK,CAACiB,OAAO;QAClC,CAAC,MAAM;UACHxB,WAAW,CAAC,IAAI,CAAC;UACjB;QACJ;MACJ;;MAEA;MACA,IAAIS,IAAI,CAACe,OAAO,CAACb,KAAK,IAAIH,UAAU,CAACgB,OAAO,GAAG2C,MAAM,CAAC/E,KAAK,GAAGE,WAAW,EAAE;QACvEkB,UAAU,CAACgB,OAAO,IAAI,CAAC;MAC3B,CAAC,MAAM,IAAIf,IAAI,CAACe,OAAO,CAACd,IAAI,IAAIF,UAAU,CAACgB,OAAO,GAAG,CAAC,EAAE;QACpDhB,UAAU,CAACgB,OAAO,IAAI,CAAC;MAC3B;;MAEA;MACApB,IAAI,CAACoB,OAAO,IAAIlB,KAAK,CAACkB,OAAO;MAC7BnB,IAAI,CAACmB,OAAO,IAAIjB,KAAK,CAACiB,OAAO;MAE7BZ,YAAY,CAACY,OAAO,GAAGoD,qBAAqB,CAACL,IAAI,CAAC;IACtD,CAAC;IAEDA,IAAI,CAAC,CAAC;IAEN,OAAO,MAAM;MACTF,QAAQ,CAACQ,mBAAmB,CAAC,SAAS,EAAEd,cAAc,CAAC;MACvDM,QAAQ,CAACQ,mBAAmB,CAAC,OAAO,EAAEX,YAAY,CAAC;MACnDO,oBAAoB,CAAC7D,YAAY,CAACY,OAAO,CAAC;IAC9C,CAAC;EACL,CAAC,EAAE,CAACzB,QAAQ,EAAEE,SAAS,EAAEf,UAAU,EAAEI,WAAW,CAAC,CAAC;;EAElD;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMoG,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMC,WAAW,GAAGtB,MAAM,CAACuB,UAAU;MACrC,MAAM5F,KAAK,GAAGyD,IAAI,CAACU,GAAG,CAACwB,WAAW,GAAG,EAAE,EAAE,GAAG,CAAC;MAC7C,MAAM1F,MAAM,GAAGwD,IAAI,CAACoC,KAAK,CAAC7F,KAAK,GAAG,IAAI,CAAC;MACvCD,aAAa,CAAC;QAAEC,KAAK;QAAEC;MAAO,CAAC,CAAC;IACpC,CAAC;IACDyF,UAAU,CAAC,CAAC,CAAC,CAAG;IAChBrB,MAAM,CAACa,gBAAgB,CAAC,QAAQ,EAAEQ,UAAU,CAAC;IAC7C,OAAO,MAAMrB,MAAM,CAACoB,mBAAmB,CAAC,QAAQ,EAAEC,UAAU,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApG,SAAS,CAAC,MAAM;IACZ,MAAMyF,MAAM,GAAGlF,SAAS,CAACuC,OAAO;IAChC,MAAM0D,eAAe,GAAIlB,CAAC,IAAK;MAC3B,MAAMmB,MAAM,GAAGnB,CAAC,CAACoB,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,GAAGlB,MAAM,CAACmB,qBAAqB,CAAC,CAAC,CAAC5E,IAAI;MACzEF,UAAU,CAACgB,OAAO,GAAGqB,IAAI,CAACU,GAAG,CACzBV,IAAI,CAACS,GAAG,CAAC6B,MAAM,GAAG7F,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,EACrC6E,MAAM,CAAC/E,KAAK,GAAGE,WACnB,CAAC;IACL,CAAC;IACD6E,MAAM,CAACG,gBAAgB,CAAC,WAAW,EAAEY,eAAe,CAAC;IACrD,OAAO,MAAMf,MAAM,CAACU,mBAAmB,CAAC,WAAW,EAAEK,eAAe,CAAC;EACzE,CAAC,EAAE,CAAC5F,WAAW,CAAC,CAAC;;EAEjB;EACAZ,SAAS,CAAC,MAAM;IACZ,MAAMyF,MAAM,GAAGlF,SAAS,CAACuC,OAAO;IAEhC,MAAM+D,WAAW,GAAIvB,CAAC,IAAK;MACvB,IAAI,CAACjE,QAAQ,IAAI,CAACE,SAAS,EAAE;MAE7B,MAAMgC,IAAI,GAAGkC,MAAM,CAACmB,qBAAqB,CAAC,CAAC;MAC3C,MAAME,MAAM,GAAGxB,CAAC,CAACqB,OAAO,GAAGpD,IAAI,CAACvB,IAAI;MACpC,MAAM+E,MAAM,GAAGzB,CAAC,CAAC0B,OAAO,GAAGzD,IAAI,CAAC0D,GAAG;MAEnC,MAAM1C,OAAO,GAAGkB,MAAM,CAAC/E,KAAK,GAAG,CAAC;MAChC,MAAM8D,OAAO,GAAGiB,MAAM,CAAC9E,MAAM,GAAG,CAAC,GAAG,EAAE;MAEtC,MAAMuG,SAAS,GAAG,GAAG;MACrB,MAAMC,UAAU,GAAG,EAAE;MAErB,IACIL,MAAM,GAAGvC,OAAO,GAAG2C,SAAS,GAAG,CAAC,IAChCJ,MAAM,GAAGvC,OAAO,GAAG2C,SAAS,GAAG,CAAC,IAChCH,MAAM,GAAGvC,OAAO,GAAG2C,UAAU,GAAG,CAAC,IACjCJ,MAAM,GAAGvC,OAAO,GAAG2C,UAAU,GAAG,CAAC,EACnC;QACEpC,MAAM,CAACI,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B;IACJ,CAAC;IAEDK,MAAM,CAACG,gBAAgB,CAAC,OAAO,EAAEiB,WAAW,CAAC;IAC7CpB,MAAM,CAACG,gBAAgB,CAAC,YAAY,EAAEiB,WAAW,CAAC;IAElD,OAAO,MAAM;MACTpB,MAAM,CAACU,mBAAmB,CAAC,OAAO,EAAEU,WAAW,CAAC;MAChDpB,MAAM,CAACU,mBAAmB,CAAC,YAAY,EAAEU,WAAW,CAAC;IACzD,CAAC;EACL,CAAC,EAAE,CAACxF,QAAQ,EAAEE,SAAS,CAAC,CAAC;EAEzB,oBACInB,OAAA;IAAKgH,SAAS,EAAC,iCAAiC;IAAAC,QAAA,eAC5CjH,OAAA;MACIkH,GAAG,EAAE/G,SAAU;MACfG,KAAK,EAAEF,UAAU,CAACE,KAAM;MACxBC,MAAM,EAAEH,UAAU,CAACG,MAAO;MAC1ByG,SAAS,EAAC,yDAAyD;MACnEG,KAAK,EAAE;QAAE7G,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAE6G,OAAO,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtH,EAAA,CAvXuBD,YAAY;AAAAwH,EAAA,GAAZxH,YAAY;AAAA,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}