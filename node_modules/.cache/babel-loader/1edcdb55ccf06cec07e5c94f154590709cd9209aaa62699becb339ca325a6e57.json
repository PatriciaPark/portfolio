{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\games\\\\BrickGirlRT.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrickGirlRT = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const spriteRef = useRef(new Image());\n\n  // 스프라이트 설정\n  const frameWidth = 335;\n  const frameHeight = 512;\n  const numCols = 3;\n  const scale = 0.2;\n  const frameX = useRef(0);\n  const frameY = useRef(0);\n  const frameCount = useRef(0);\n  const [spriteLoaded, setSpriteLoaded] = useState(false);\n\n  // 브릭걸 위치 및 점프 관련 변수\n  const girlX = useRef(50);\n  const girlY = useRef(0);\n  const velocityY = useRef(0); // velocityY가 너무 작으면 → 충분한 높이 도달 못함 : -12 → -13, -14 조정. 여기서 말고 아래쪽 값\n  const gravity = 0.6;\n  const jumpCount = useRef(0);\n  const maxJumps = 2;\n  const bricks = useRef([]); // 벽돌 배열\n\n  // 지형 설정\n  const scrollSpeed = 2;\n  const tileSize = 50;\n  const groundTiles = useRef([]);\n  const levelData = [{\n    x: 0,\n    y: 350\n  }, {\n    x: 50,\n    y: 350\n  }, {\n    x: 100,\n    y: 350\n  }, {\n    x: 150,\n    y: 350\n  }, {\n    x: 200,\n    y: 350\n  },\n  // 간격 (점프 유도)\n  {\n    x: 250,\n    y: 350\n  }, {\n    x: 350,\n    y: 350\n  }, {\n    x: 400,\n    y: 350\n  },\n  // 높은 지형\n  {\n    x: 500,\n    y: 300\n  }, {\n    x: 550,\n    y: 300\n  }, {\n    x: 600,\n    y: 250\n  }, {\n    x: 650,\n    y: 250\n  }, {\n    x: 700,\n    y: 200\n  }, {\n    x: 750,\n    y: 200\n  }];\n\n  // 초기 타일 로딩\n  useEffect(() => {\n    groundTiles.current = levelData.map(tile => ({\n      ...tile,\n      type: 'ground'\n    }));\n  }, []);\n\n  // 착지 여부 체크\n  const isOnGround = () => {\n    const feetX = girlX.current + frameWidth * scale / 2;\n    const feetY = girlY.current + frameHeight * scale;\n    return groundTiles.current.some(tile => feetX > tile.x && feetX < tile.x + tileSize && feetY >= tile.y && feetY <= tile.y + 10);\n  };\n\n  // 벽돌 던지기\n  const throwBrick = () => {\n    const startX = girlX.current + 30;\n    const startY = girlY.current + 10;\n    const vx = 6 + Math.random();\n    const vy = -8;\n    bricks.current.push({\n      x: startX,\n      y: startY,\n      vx,\n      vy\n    });\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    canvas.width = 800;\n    canvas.height = 400;\n\n    // 스프라이트 이미지 로드\n    spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\n    spriteRef.current.onload = () => {\n      setSpriteLoaded(true);\n      const standingTile = groundTiles.current.find(tile => girlX.current + frameWidth * scale / 2 > tile.x && girlX.current + frameWidth * scale / 2 < tile.x + tileSize);\n      if (standingTile) {\n        girlY.current = standingTile.y - frameHeight * scale;\n      }\n    };\n\n    // 키 입력 처리\n    const handleKeyDown = e => {\n      if (e.code === 'Space') {\n        e.preventDefault();\n        throwBrick();\n      } else if (e.code === 'ArrowUp') {\n        if (jumpCount.current < maxJumps) {\n          velocityY.current = -12 * (jumpCount.current === 1 ? 1.2 : 1);\n          jumpCount.current++;\n        }\n      }\n    };\n\n    // 모바일 터치 조작 처리\n    const handleTouchStart = e => {\n      const touchX = e.touches[0].clientX;\n      if (touchX < canvas.width / 2) {\n        if (jumpCount.current < maxJumps) {\n          velocityY.current = -12;\n          jumpCount.current++;\n        }\n      } else {\n        throwBrick();\n      }\n    };\n    const updateFrame = () => {\n      frameCount.current++;\n      if (frameCount.current % 10 === 0) {\n        frameX.current = (frameX.current + 1) % numCols;\n      }\n    };\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 지형 렌더링\n      groundTiles.current.forEach(tile => {\n        tile.x -= scrollSpeed;\n        ctx.fillStyle = 'saddlebrown';\n        ctx.fillRect(tile.x, tile.y, tileSize, tileSize);\n      });\n\n      // 무한 스크롤 지형 추가\n      const lastTile = groundTiles.current[groundTiles.current.length - 1];\n      if (lastTile && lastTile.x < canvas.width) {\n        groundTiles.current.push({\n          x: lastTile.x + tileSize,\n          y: 350,\n          type: 'ground'\n        });\n      }\n\n      // 점프 및 중력 처리\n      if (isOnGround()) {\n        velocityY.current = 0;\n        jumpCount.current = 0;\n        const landingTile = groundTiles.current.find(tile => girlX.current + frameWidth * scale / 2 > tile.x && girlX.current + frameWidth * scale / 2 < tile.x + tileSize);\n        if (landingTile) {\n          girlY.current = landingTile.y - frameHeight * scale;\n        }\n      } else {\n        velocityY.current += gravity;\n        girlY.current += velocityY.current;\n      }\n\n      // 벽돌 렌더링\n      ctx.font = '16px Arial';\n      bricks.current.forEach((brick, index) => {\n        brick.x += brick.vx;\n        brick.vy += gravity * 0.5;\n        brick.y += brick.vy;\n        ctx.fillText('🧱', brick.x, brick.y);\n        if (brick.x > canvas.width || brick.y > canvas.height) {\n          bricks.current.splice(index, 1);\n        }\n      });\n\n      /// 스프라이트 그리기\n      if (spriteLoaded) {\n        updateFrame();\n        ctx.drawImage(spriteRef.current, frameX.current * frameWidth, frameY.current * frameHeight, frameWidth, frameHeight, girlX.current, girlY.current, frameWidth * scale, frameHeight * scale);\n      } else {\n        ctx.fillStyle = 'hotpink';\n        ctx.fillRect(girlX.current, girlY.current, 30, 30);\n      }\n      animationFrameId = requestAnimationFrame(draw);\n    };\n\n    // 이벤트 리스너 및 루프 시작\n    window.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('touchstart', handleTouchStart);\n    draw();\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [spriteLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"font-press font-bold mb-4 text-rose-400\",\n      children: \"Brick Girl: Run & Throw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '2px solid #999'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-center mt-4 text-gray-500 dark:text-gray-400 font-press\",\n      children: \"\\u2B06\\uFE0F: Jump / Space: \\uD83E\\uDDF1 (\\uBAA8\\uBC14\\uC77C\\uC740 \\uD654\\uBA74 \\uC88C\\uC6B0 \\uD130\\uCE58)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n};\n_s(BrickGirlRT, \"dPrBckgDXOzjfosjYwIl3npEVC4=\");\n_c = BrickGirlRT;\nexport default BrickGirlRT;\nvar _c;\n$RefreshReg$(_c, \"BrickGirlRT\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","BrickGirlRT","_s","canvasRef","spriteRef","Image","frameWidth","frameHeight","numCols","scale","frameX","frameY","frameCount","spriteLoaded","setSpriteLoaded","girlX","girlY","velocityY","gravity","jumpCount","maxJumps","bricks","scrollSpeed","tileSize","groundTiles","levelData","x","y","current","map","tile","type","isOnGround","feetX","feetY","some","throwBrick","startX","startY","vx","Math","random","vy","push","canvas","ctx","getContext","animationFrameId","width","height","src","process","env","PUBLIC_URL","onload","standingTile","find","handleKeyDown","e","code","preventDefault","handleTouchStart","touchX","touches","clientX","updateFrame","draw","clearRect","forEach","fillStyle","fillRect","lastTile","length","landingTile","font","brick","index","fillText","splice","drawImage","requestAnimationFrame","window","addEventListener","removeEventListener","cancelAnimationFrame","style","textAlign","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/games/BrickGirlRT.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst BrickGirlRT = () => {\r\n    const canvasRef = useRef(null);\r\n    const spriteRef = useRef(new Image());\r\n\r\n    // 스프라이트 설정\r\n    const frameWidth = 335;\r\n    const frameHeight = 512;\r\n    const numCols = 3;\r\n    const scale = 0.2;\r\n    const frameX = useRef(0);\r\n    const frameY = useRef(0);\r\n    const frameCount = useRef(0);\r\n    const [spriteLoaded, setSpriteLoaded] = useState(false);\r\n\r\n    // 브릭걸 위치 및 점프 관련 변수\r\n    const girlX = useRef(50);\r\n    const girlY = useRef(0);\r\n    const velocityY = useRef(0); // velocityY가 너무 작으면 → 충분한 높이 도달 못함 : -12 → -13, -14 조정. 여기서 말고 아래쪽 값\r\n    const gravity = 0.6;\r\n    const jumpCount = useRef(0);\r\n    const maxJumps = 2;\r\n\r\n    const bricks = useRef([]); // 벽돌 배열\r\n\r\n    // 지형 설정\r\n    const scrollSpeed = 2;\r\n    const tileSize = 50;\r\n    const groundTiles = useRef([]);\r\n    const levelData = [\r\n        { x: 0, y: 350 }, { x: 50, y: 350 }, { x: 100, y: 350 },\r\n        { x: 150, y: 350 }, { x: 200, y: 350 },\r\n        // 간격 (점프 유도)\r\n        { x: 250, y: 350 }, { x: 350, y: 350 },\r\n        { x: 400, y: 350 },\r\n        // 높은 지형\r\n        { x: 500, y: 300 }, { x: 550, y: 300 },\r\n        { x: 600, y: 250 }, { x: 650, y: 250 },\r\n        { x: 700, y: 200 }, { x: 750, y: 200 },\r\n    ];\r\n\r\n    // 초기 타일 로딩\r\n    useEffect(() => {\r\n        groundTiles.current = levelData.map(tile => ({ ...tile, type: 'ground' }));\r\n    }, []);\r\n\r\n    // 착지 여부 체크\r\n    const isOnGround = () => {\r\n        const feetX = girlX.current + (frameWidth * scale) / 2;\r\n        const feetY = girlY.current + frameHeight * scale;\r\n        return groundTiles.current.some(tile =>\r\n            feetX > tile.x && feetX < tile.x + tileSize &&\r\n            feetY >= tile.y && feetY <= tile.y + 10\r\n        );\r\n    };\r\n\r\n    // 벽돌 던지기\r\n    const throwBrick = () => {\r\n        const startX = girlX.current + 30;\r\n        const startY = girlY.current + 10;\r\n        const vx = 6 + Math.random();\r\n        const vy = -8;\r\n        bricks.current.push({ x: startX, y: startY, vx, vy });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        let animationFrameId;\r\n\r\n        canvas.width = 800;\r\n        canvas.height = 400;\r\n\r\n        // 스프라이트 이미지 로드\r\n        spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\r\n        spriteRef.current.onload = () => {\r\n            setSpriteLoaded(true);\r\n            const standingTile = groundTiles.current.find(tile =>\r\n                girlX.current + (frameWidth * scale) / 2 > tile.x &&\r\n                girlX.current + (frameWidth * scale) / 2 < tile.x + tileSize\r\n            );\r\n            if (standingTile) {\r\n                girlY.current = standingTile.y - frameHeight * scale;\r\n            }\r\n        };\r\n\r\n        // 키 입력 처리\r\n        const handleKeyDown = (e) => {\r\n            if (e.code === 'Space') {\r\n                e.preventDefault();\r\n                throwBrick();\r\n            } else if (e.code === 'ArrowUp') {\r\n                if (jumpCount.current < maxJumps) {\r\n                    velocityY.current = -12 * (jumpCount.current === 1 ? 1.2 : 1);\r\n                    jumpCount.current++;\r\n                }\r\n            }\r\n        };\r\n\r\n        // 모바일 터치 조작 처리\r\n        const handleTouchStart = (e) => {\r\n            const touchX = e.touches[0].clientX;\r\n            if (touchX < canvas.width / 2) {\r\n                if (jumpCount.current < maxJumps) {\r\n                    velocityY.current = -12;\r\n                    jumpCount.current++;\r\n                }\r\n            } else {\r\n                throwBrick();\r\n            }\r\n        };\r\n\r\n        const updateFrame = () => {\r\n            frameCount.current++;\r\n            if (frameCount.current % 10 === 0) {\r\n                frameX.current = (frameX.current + 1) % numCols;\r\n            }\r\n        };\r\n\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // 지형 렌더링\r\n            groundTiles.current.forEach(tile => {\r\n                tile.x -= scrollSpeed;\r\n                ctx.fillStyle = 'saddlebrown';\r\n                ctx.fillRect(tile.x, tile.y, tileSize, tileSize);\r\n            });\r\n\r\n            // 무한 스크롤 지형 추가\r\n            const lastTile = groundTiles.current[groundTiles.current.length - 1];\r\n            if (lastTile && lastTile.x < canvas.width) {\r\n                groundTiles.current.push({ x: lastTile.x + tileSize, y: 350, type: 'ground' });\r\n            }\r\n\r\n            // 점프 및 중력 처리\r\n            if (isOnGround()) {\r\n                velocityY.current = 0;\r\n                jumpCount.current = 0;\r\n                const landingTile = groundTiles.current.find(tile =>\r\n                    girlX.current + (frameWidth * scale) / 2 > tile.x &&\r\n                    girlX.current + (frameWidth * scale) / 2 < tile.x + tileSize\r\n                );\r\n                if (landingTile) {\r\n                    girlY.current = landingTile.y - frameHeight * scale;\r\n                }\r\n            } else {\r\n                velocityY.current += gravity;\r\n                girlY.current += velocityY.current;\r\n            }\r\n\r\n            // 벽돌 렌더링\r\n            ctx.font = '16px Arial';\r\n            bricks.current.forEach((brick, index) => {\r\n                brick.x += brick.vx;\r\n                brick.vy += gravity * 0.5;\r\n                brick.y += brick.vy;\r\n                ctx.fillText('🧱', brick.x, brick.y);\r\n                if (brick.x > canvas.width || brick.y > canvas.height) {\r\n                    bricks.current.splice(index, 1);\r\n                }\r\n            });\r\n\r\n            /// 스프라이트 그리기\r\n            if (spriteLoaded) {\r\n                updateFrame();\r\n                ctx.drawImage(\r\n                    spriteRef.current,\r\n                    frameX.current * frameWidth,\r\n                    frameY.current * frameHeight,\r\n                    frameWidth,\r\n                    frameHeight,\r\n                    girlX.current,\r\n                    girlY.current,\r\n                    frameWidth * scale,\r\n                    frameHeight * scale\r\n                );\r\n            } else {\r\n                ctx.fillStyle = 'hotpink';\r\n                ctx.fillRect(girlX.current, girlY.current, 30, 30);\r\n            }\r\n\r\n            animationFrameId = requestAnimationFrame(draw);\r\n        };\r\n\r\n        // 이벤트 리스너 및 루프 시작\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        canvas.addEventListener('touchstart', handleTouchStart);\r\n        draw();\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n            canvas.removeEventListener('touchstart', handleTouchStart);\r\n            cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [spriteLoaded]);\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h2 className=\"font-press font-bold mb-4 text-rose-400\">Brick Girl: Run & Throw</h2>\r\n            <canvas ref={canvasRef} style={{ border: '2px solid #999' }} />\r\n            <p className=\"text-xs text-center mt-4 text-gray-500 dark:text-gray-400 font-press\">\r\n                ⬆️: Jump / Space: 🧱 (모바일은 화면 좌우 터치)\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BrickGirlRT;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}