{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\pages\\\\Game.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 400,\n    height: 300\n  });\n\n  // 브릭걸 상태\n  const girlX = 50;\n  const girlYRef = useRef(0); // 점프 위치용\n  const isJumping = useRef(false);\n  const velocity = useRef(0);\n\n  // 선인장\n  const cactusXRef = useRef(canvasSize.width);\n  const cactusY = canvasSize.height - 30;\n\n  // 게임 루프\n  const animationRef = useRef();\n\n  // Game over\n  const [gameOver, setGameOver] = useState(false);\n\n  // 점수\n  const [score, setScore] = useState(0);\n  const scoreRef = useRef(0);\n  const cactusPassed = useRef(false);\n\n  // 브릭 상태\n  const bricksRef = useRef([]);\n\n  // 벽돌 발사 함수\n  const shootBrick = () => {\n    bricksRef.current.push({\n      x: girlX + 10,\n      y: girlYRef.current,\n      speed: 7\n    });\n  };\n\n  // 키 or 터치 이벤트 연결\n  const handleAction = e => {\n    if (e.type === \"keydown\") {\n      if (e.key === \" \" || e.key === \"Spacebar\") shootBrick(); // 스페이스바\n      else if (!isJumping.current) {\n        isJumping.current = true;\n        velocity.current = -15;\n      }\n    } else {\n      shootBrick(); // 터치 시 던지기\n    }\n  };\n  window.addEventListener(\"keydown\", handleAction);\n  canvas.addEventListener(\"touchstart\", handleAction);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    girlYRef.current = canvasSize.height - 40;\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 배경\n      ctx.fillStyle = \"#1e293b\"; // 어두운 밤 배경\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // 브릭걸\n      ctx.font = \"24px Arial\";\n      ctx.fillText(\"🧱\", girlX, girlYRef.current);\n\n      // 선인장\n      ctx.font = \"20px Arial\";\n      ctx.fillText(\"🌵\", cactusXRef.current, cactusY);\n\n      // 점프 로직\n      if (isJumping.current) {\n        girlYRef.current += velocity.current;\n        velocity.current += 1; // gravity\n\n        if (girlYRef.current >= canvasSize.height - 40) {\n          girlYRef.current = canvasSize.height - 40;\n          isJumping.current = false;\n          velocity.current = 0;\n        }\n      }\n\n      // 선인장 이동\n      cactusXRef.current -= 5;\n\n      // 벽돌 이동 & 그리기\n      ctx.fillStyle = \"#f87171\"; // 빨간 벽돌\n      bricksRef.current.forEach((brick, index) => {\n        brick.x += brick.speed;\n        ctx.font = \"16px Arial\";\n        ctx.fillText(\"🧱\", brick.x, brick.y);\n\n        // 🌵에 맞았는지 확인\n        const cactusX = cactusXRef.current;\n        const cactusYTop = cactusY - 20;\n        if (brick.x > cactusX - 10 && brick.x < cactusX + 10 && brick.y > cactusYTop && brick.y < cactusY + 20) {\n          // 선인장 제거 + 점수 증가\n          cactusXRef.current = canvas.width + Math.random() * 200;\n          bricksRef.current.splice(index, 1);\n          cactusPassed.current = false;\n          scoreRef.current += 1;\n          setScore(scoreRef.current);\n        }\n\n        // 벽돌이 화면을 벗어나면 제거\n        if (brick.x > canvas.width + 20) {\n          bricksRef.current.splice(index, 1);\n        }\n      });\n      // Game over\n      if (cactusXRef.current < girlX + 20 && cactusXRef.current > girlX - 20 && girlYRef.current >= canvasSize.height - 50) {\n        setGameOver(true);\n        cancelAnimationFrame(animationRef.current);\n        ctx.fillStyle = \"white\";\n        ctx.font = \"24px Arial\";\n        ctx.fillText(\"😢 GAME OVER\", canvasSize.width / 2, canvasSize.height / 2);\n        return;\n      }\n\n      // 점수 조건\n      if (!cactusPassed.current && cactusXRef.current + 20 < girlX) {\n        cactusPassed.current = true;\n        scoreRef.current += 1;\n        setScore(scoreRef.current);\n      }\n\n      // 선인장 리셋\n      if (cactusXRef.current + 20 < 0) {\n        cactusXRef.current = canvasSize.width + Math.random() * 200;\n        cactusPassed.current = false; // 점수 조건 초기화\n      }\n\n      // Score\n      ctx.fillStyle = \"#fbbf24\";\n      ctx.font = \"16px Arial\";\n      ctx.fillText(`Score: ${scoreRef.current}`, 10, 30);\n      animationRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    const handleJump = () => {\n      if (!isJumping.current) {\n        isJumping.current = true;\n        velocity.current = -15;\n      }\n    };\n    window.addEventListener(\"keydown\", handleJump);\n    canvas.addEventListener(\"touchstart\", handleJump);\n    return () => {\n      window.removeEventListener(\"keydown\", handleJump);\n      canvas.removeEventListener(\"touchstart\", handleJump);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [canvasSize]);\n\n  // 반응형\n  useEffect(() => {\n    const updateSize = () => {\n      const width = Math.min(window.innerWidth - 10, 480);\n      const height = Math.round(width * 0.75);\n      setCanvasSize({\n        width,\n        height\n      });\n    };\n    updateSize();\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"\\uD83E\\uDDF1 Brick Girl Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      className: \"bg-black rounded shadow-md\",\n      style: {\n        width: \"100%\",\n        maxWidth: \"480px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"faQtNTuoDFfGVWQT8dlfmCtT2VI=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","Game","_s","canvasRef","canvasSize","setCanvasSize","width","height","girlX","girlYRef","isJumping","velocity","cactusXRef","cactusY","animationRef","gameOver","setGameOver","score","setScore","scoreRef","cactusPassed","bricksRef","shootBrick","current","push","x","y","speed","handleAction","e","type","key","window","addEventListener","canvas","ctx","getContext","draw","clearRect","fillStyle","fillRect","font","fillText","forEach","brick","index","cactusX","cactusYTop","Math","random","splice","cancelAnimationFrame","requestAnimationFrame","handleJump","removeEventListener","updateSize","min","innerWidth","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","maxWidth","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/pages/Game.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function Game() {\r\n    const canvasRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 400, height: 300 });\r\n\r\n    // 브릭걸 상태\r\n    const girlX = 50;\r\n    const girlYRef = useRef(0); // 점프 위치용\r\n    const isJumping = useRef(false);\r\n    const velocity = useRef(0);\r\n\r\n    // 선인장\r\n    const cactusXRef = useRef(canvasSize.width);\r\n    const cactusY = canvasSize.height - 30;\r\n\r\n    // 게임 루프\r\n    const animationRef = useRef();\r\n\r\n    // Game over\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    // 점수\r\n    const [score, setScore] = useState(0);\r\n    const scoreRef = useRef(0);\r\n    const cactusPassed = useRef(false);\r\n\r\n    // 브릭 상태\r\n    const bricksRef = useRef([]);\r\n\r\n    // 벽돌 발사 함수\r\n    const shootBrick = () => {\r\n        bricksRef.current.push({\r\n            x: girlX + 10,\r\n            y: girlYRef.current,\r\n            speed: 7,\r\n        });\r\n    };\r\n\r\n    // 키 or 터치 이벤트 연결\r\n    const handleAction = (e) => {\r\n        if (e.type === \"keydown\") {\r\n            if (e.key === \" \" || e.key === \"Spacebar\") shootBrick(); // 스페이스바\r\n            else if (!isJumping.current) {\r\n                isJumping.current = true;\r\n                velocity.current = -15;\r\n            }\r\n        } else {\r\n            shootBrick(); // 터치 시 던지기\r\n        }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleAction);\r\n    canvas.addEventListener(\"touchstart\", handleAction);\r\n\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        girlYRef.current = canvasSize.height - 40;\r\n\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // 배경\r\n            ctx.fillStyle = \"#1e293b\"; // 어두운 밤 배경\r\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // 브릭걸\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(\"🧱\", girlX, girlYRef.current);\r\n\r\n            // 선인장\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\"🌵\", cactusXRef.current, cactusY);\r\n\r\n            // 점프 로직\r\n            if (isJumping.current) {\r\n                girlYRef.current += velocity.current;\r\n                velocity.current += 1; // gravity\r\n\r\n                if (girlYRef.current >= canvasSize.height - 40) {\r\n                    girlYRef.current = canvasSize.height - 40;\r\n                    isJumping.current = false;\r\n                    velocity.current = 0;\r\n                }\r\n            }\r\n\r\n            // 선인장 이동\r\n            cactusXRef.current -= 5;\r\n\r\n            // 벽돌 이동 & 그리기\r\n            ctx.fillStyle = \"#f87171\"; // 빨간 벽돌\r\n            bricksRef.current.forEach((brick, index) => {\r\n                brick.x += brick.speed;\r\n                ctx.font = \"16px Arial\";\r\n                ctx.fillText(\"🧱\", brick.x, brick.y);\r\n\r\n                // 🌵에 맞았는지 확인\r\n                const cactusX = cactusXRef.current;\r\n                const cactusYTop = cactusY - 20;\r\n                if (\r\n                    brick.x > cactusX - 10 &&\r\n                    brick.x < cactusX + 10 &&\r\n                    brick.y > cactusYTop &&\r\n                    brick.y < cactusY + 20\r\n                ) {\r\n                    // 선인장 제거 + 점수 증가\r\n                    cactusXRef.current = canvas.width + Math.random() * 200;\r\n                    bricksRef.current.splice(index, 1);\r\n                    cactusPassed.current = false;\r\n                    scoreRef.current += 1;\r\n                    setScore(scoreRef.current);\r\n                }\r\n\r\n                // 벽돌이 화면을 벗어나면 제거\r\n                if (brick.x > canvas.width + 20) {\r\n                    bricksRef.current.splice(index, 1);\r\n                }\r\n            });\r\n            // Game over\r\n            if (\r\n                cactusXRef.current < girlX + 20 &&\r\n                cactusXRef.current > girlX - 20 &&\r\n                girlYRef.current >= canvasSize.height - 50\r\n            ) {\r\n                setGameOver(true);\r\n                cancelAnimationFrame(animationRef.current);\r\n                ctx.fillStyle = \"white\";\r\n                ctx.font = \"24px Arial\";\r\n                ctx.fillText(\"😢 GAME OVER\", canvasSize.width / 2, canvasSize.height / 2);\r\n                return;\r\n            }\r\n\r\n            // 점수 조건\r\n            if (!cactusPassed.current && cactusXRef.current + 20 < girlX) {\r\n                cactusPassed.current = true;\r\n                scoreRef.current += 1;\r\n                setScore(scoreRef.current);\r\n            }\r\n\r\n            // 선인장 리셋\r\n            if (cactusXRef.current + 20 < 0) {\r\n                cactusXRef.current = canvasSize.width + Math.random() * 200;\r\n                cactusPassed.current = false; // 점수 조건 초기화\r\n            }\r\n\r\n            // Score\r\n            ctx.fillStyle = \"#fbbf24\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(`Score: ${scoreRef.current}`, 10, 30);\r\n\r\n            animationRef.current = requestAnimationFrame(draw);\r\n        };\r\n\r\n\r\n        draw();\r\n\r\n        const handleJump = () => {\r\n            if (!isJumping.current) {\r\n                isJumping.current = true;\r\n                velocity.current = -15;\r\n            }\r\n        };\r\n\r\n        window.addEventListener(\"keydown\", handleJump);\r\n        canvas.addEventListener(\"touchstart\", handleJump);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleJump);\r\n            canvas.removeEventListener(\"touchstart\", handleJump);\r\n            cancelAnimationFrame(animationRef.current);\r\n        };\r\n    }, [canvasSize]);\r\n\r\n    // 반응형\r\n    useEffect(() => {\r\n        const updateSize = () => {\r\n            const width = Math.min(window.innerWidth - 10, 480);\r\n            const height = Math.round(width * 0.75);\r\n            setCanvasSize({ width, height });\r\n        };\r\n        updateSize();\r\n        window.addEventListener(\"resize\", updateSize);\r\n        return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center mt-6\">\r\n            <h2 className=\"text-2xl font-bold mb-4\">🧱 Brick Girl Run</h2>\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={canvasSize.width}\r\n                height={canvasSize.height}\r\n                className=\"bg-black rounded shadow-md\"\r\n                style={{ width: \"100%\", maxWidth: \"480px\" }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}