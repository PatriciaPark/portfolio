{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\pages\\\\MindMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mindMapData = {\n  label: \"ME\",\n  color: \"bg-lime-500\",\n  children: [{\n    label: \"Tech Stack\",\n    color: \"bg-blue-400\",\n    children: [{\n      label: \"Java\",\n      color: \"bg-blue-300\"\n    }, {\n      label: \"JavaScript\",\n      color: \"bg-blue-300\"\n    }, {\n      label: \"HTML/CSS\",\n      color: \"bg-blue-200\"\n    }, {\n      label: \"Python\",\n      color: \"bg-blue-200\"\n    }, {\n      label: \"C#\",\n      color: \"bg-blue-200\"\n    }, {\n      label: \"Vue.js\",\n      color: \"bg-blue-100\"\n    }, {\n      label: \"Django\",\n      color: \"bg-blue-100\"\n    }]\n  }, {\n    label: \"Hobbies\",\n    color: \"bg-orange-400\",\n    children: [{\n      label: \"Game\",\n      color: \"bg-orange-300\",\n      children: [{\n        label: \"Diablo\",\n        color: \"bg-orange-200\"\n      }, {\n        label: \"Animal Crossing\",\n        color: \"bg-orange-100\"\n      }, {\n        label: \"Mine Craft\",\n        color: \"bg-orange-100\"\n      }]\n    }, {\n      label: \"Writing\",\n      color: \"bg-orange-300\"\n    }, {\n      label: \"Piano\",\n      color: \"bg-orange-200\"\n    }, {\n      label: \"Listening Music\",\n      color: \"bg-orange-200\"\n    }, {\n      label: \"Game Making\",\n      color: \"bg-orange-100\"\n    }, {\n      label: \"Caligraphy\",\n      color: \"bg-orange-100\"\n    }]\n  }, {\n    label: \"Languages\",\n    color: \"bg-purple-700\",\n    children: [{\n      label: \"Korean\",\n      color: \"bg-purple-600\"\n    }, {\n      label: \"English\",\n      color: \"bg-purple-500\"\n    }, {\n      label: \"Chinese\",\n      color: \"bg-purple-400\"\n    }, {\n      label: \"Japanese\",\n      color: \"bg-purple-300\"\n    }]\n  }]\n};\nexport default function MindMapPage() {\n  _s();\n  const [path, setPath] = useState([]);\n  const currentNode = path[path.length - 1];\n  const isRoot = path.length === 0;\n  const handleClick = node => {\n    if (node.children) {\n      setPath([...path, node]);\n    }\n  };\n  const handleBack = () => {\n    if (path.length > 0) {\n      setPath(path.slice(0, -1));\n    }\n  };\n  const ripple = e => {\n    const button = e.currentTarget;\n    const ripple = document.createElement(\"span\");\n    ripple.className = \"absolute rounded-full bg-white/40 animate-ping w-10 h-10\";\n    ripple.style.left = `${e.nativeEvent.offsetX - 20}px`;\n    ripple.style.top = `${e.nativeEvent.offsetY - 20}px`;\n    button.appendChild(ripple);\n    setTimeout(() => ripple.remove(), 500);\n  };\n  const baseCircleClass = \"rounded-full text-white text-center flex items-center justify-center shadow-xl border-4 border-white/20 dark:border-white/10 transition-all duration-300 bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-white/10 to-black/10\";\n  const hoverClass = \"hover:scale-110 hover:brightness-110\";\n  const renderNodes = () => {\n    var _currentNode$children;\n    if (isRoot) {\n      return [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `w-28 h-28 ${mindMapData.color} font-bold text-xl ${baseCircleClass} ${hoverClass} relative overflow-hidden`,\n        onClick: e => {\n          ripple(e);\n          handleClick(mindMapData);\n        },\n        children: mindMapData.label\n      }, \"me\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)];\n    }\n    return [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      className: `w-16 h-16 ${currentNode.color} font-bold text-sm ${baseCircleClass} ${hoverClass} mb-4 mt-2`,\n      children: currentNode.label\n    }, \"back-btn\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), ...(((_currentNode$children = currentNode.children) === null || _currentNode$children === void 0 ? void 0 : _currentNode$children.map(child => {\n      const hasChildren = !!child.children;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `w-24 h-24 ${child.color} font-semibold ${baseCircleClass} ${hasChildren ? hoverClass : \"\"} relative overflow-hidden`,\n        onClick: e => {\n          ripple(e);\n          handleClick(child);\n        },\n        children: child.label\n      }, child.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this);\n    })) || [])];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-white dark:bg-gray-900 text-white flex flex-col items-center justify-start space-y-6 pt-24 pb-8 px-4\",\n    children: renderNodes()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(MindMapPage, \"dobzRtCKtqj6DjQy4YxZKcscreA=\");\n_c = MindMapPage;\nvar _c;\n$RefreshReg$(_c, \"MindMapPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mindMapData","label","color","children","MindMapPage","_s","path","setPath","currentNode","length","isRoot","handleClick","node","handleBack","slice","ripple","e","button","currentTarget","document","createElement","className","style","left","nativeEvent","offsetX","top","offsetY","appendChild","setTimeout","remove","baseCircleClass","hoverClass","renderNodes","_currentNode$children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","child","hasChildren","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/pages/MindMap.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst mindMapData = {\r\n  label: \"ME\",\r\n  color: \"bg-lime-500\",\r\n  children: [\r\n    {\r\n      label: \"Tech Stack\",\r\n      color: \"bg-blue-400\",\r\n      children: [\r\n        { label: \"Java\", color: \"bg-blue-300\" },\r\n        { label: \"JavaScript\", color: \"bg-blue-300\" },\r\n        { label: \"HTML/CSS\", color: \"bg-blue-200\" },\r\n        { label: \"Python\", color: \"bg-blue-200\" },\r\n        { label: \"C#\", color: \"bg-blue-200\" },\r\n        { label: \"Vue.js\", color: \"bg-blue-100\" },\r\n        { label: \"Django\", color: \"bg-blue-100\" }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Hobbies\",\r\n      color: \"bg-orange-400\",\r\n      children: [\r\n          {\r\n            label: \"Game\",\r\n            color: \"bg-orange-300\",\r\n            children: [\r\n              { label: \"Diablo\", color: \"bg-orange-200\" },\r\n              { label: \"Animal Crossing\", color: \"bg-orange-100\" },\r\n              { label: \"Mine Craft\", color: \"bg-orange-100\" }\r\n            ]\r\n          },\r\n        { label: \"Writing\", color: \"bg-orange-300\" },\r\n        { label: \"Piano\", color: \"bg-orange-200\" },\r\n        { label: \"Listening Music\", color: \"bg-orange-200\" },\r\n        { label: \"Game Making\", color: \"bg-orange-100\" },\r\n        { label: \"Caligraphy\", color: \"bg-orange-100\" }\r\n      ]\r\n    },\r\n    {\r\n      label: \"Languages\",\r\n      color: \"bg-purple-700\",\r\n      children: [\r\n        { label: \"Korean\", color: \"bg-purple-600\" },\r\n        { label: \"English\", color: \"bg-purple-500\" },\r\n        { label: \"Chinese\", color: \"bg-purple-400\" },\r\n        { label: \"Japanese\", color: \"bg-purple-300\" }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport default function MindMapPage() {\r\n  const [path, setPath] = useState([]);\r\n\r\n  const currentNode = path[path.length - 1];\r\n  const isRoot = path.length === 0;\r\n\r\n  const handleClick = (node) => {\r\n    if (node.children) {\r\n      setPath([...path, node]);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (path.length > 0) {\r\n      setPath(path.slice(0, -1));\r\n    }\r\n  };\r\n\r\n  const ripple = (e) => {\r\n    const button = e.currentTarget;\r\n    const ripple = document.createElement(\"span\");\r\n    ripple.className = \"absolute rounded-full bg-white/40 animate-ping w-10 h-10\";\r\n    ripple.style.left = `${e.nativeEvent.offsetX - 20}px`;\r\n    ripple.style.top = `${e.nativeEvent.offsetY - 20}px`;\r\n    button.appendChild(ripple);\r\n    setTimeout(() => ripple.remove(), 500);\r\n  };\r\n\r\n  const baseCircleClass =\r\n    \"rounded-full text-white text-center flex items-center justify-center shadow-xl border-4 border-white/20 dark:border-white/10 transition-all duration-300 bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-white/10 to-black/10\";\r\n  const hoverClass = \"hover:scale-110 hover:brightness-110\";\r\n\r\n  const renderNodes = () => {\r\n    if (isRoot) {\r\n      return [\r\n        <button\r\n          key=\"me\"\r\n          className={`w-28 h-28 ${mindMapData.color} font-bold text-xl ${baseCircleClass} ${hoverClass} relative overflow-hidden`}\r\n          onClick={(e) => {\r\n            ripple(e);\r\n            handleClick(mindMapData);\r\n          }}\r\n        >\r\n          {mindMapData.label}\r\n        </button>\r\n      ];\r\n    }\r\n\r\n    return [\r\n      <button\r\n        key=\"back-btn\"\r\n        onClick={handleBack}\r\n        className={`w-16 h-16 ${currentNode.color} font-bold text-sm ${baseCircleClass} ${hoverClass} mb-4 mt-2`}\r\n      >\r\n        {currentNode.label}\r\n      </button>,\r\n      ...(currentNode.children?.map((child) => {\r\n        const hasChildren = !!child.children;\r\n        return (\r\n          <button\r\n            key={child.label}\r\n            className={`w-24 h-24 ${child.color} font-semibold ${baseCircleClass} ${hasChildren ? hoverClass : \"\"} relative overflow-hidden`}\r\n            onClick={(e) => {\r\n              ripple(e);\r\n              handleClick(child);\r\n            }}\r\n          >\r\n            {child.label}\r\n          </button>\r\n        );\r\n      }) || [])\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white dark:bg-gray-900 text-white flex flex-col items-center justify-start space-y-6 pt-24 pb-8 px-4\">\r\n      {renderNodes()}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}