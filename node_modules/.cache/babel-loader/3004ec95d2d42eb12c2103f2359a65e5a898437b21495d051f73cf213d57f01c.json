{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\games\\\\BrickBreaker.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BrickBreaker() {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasSize, setCanvasSize] = useState({\n    width: 400,\n    height: 300\n  });\n\n  // 게임 설정값들\n  const canvasWidth = canvasSize.width; //400\n  const canvasHeight = canvasSize.height; //300\n  const ballRadius = canvasSize.width * 0.025; //10;\n\n  // 점수 및 게임 상태\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [gameClear, setGameClear] = useState(false);\n  const scoreRef = useRef(0);\n\n  // 공 상태 (x, y, 속도)\n  const xRef = useRef(canvasWidth / 2);\n  const yRef = useRef(canvasHeight - 60);\n  const dxRef = useRef(2);\n  const dyRef = useRef(-2);\n\n  // 패들 상태\n  const paddleHeight = canvasSize.height * 0.03; // 높이의 3% (원래값 10)\n  const paddleWidth = canvasSize.width * 0.25; // 너비의 25% (원래값 75)\n  const paddleXRef = useRef((canvasWidth - paddleWidth) / 2);\n  const keys = useRef({\n    left: false,\n    right: false\n  });\n  const animationRef = useRef(null);\n\n  // 벽돌 설정값\n  const brickColumnCount = 6;\n  const brickRowCount = 3;\n  const brickPadding = 10;\n  const brickWidth = (canvasSize.width - brickPadding) / brickColumnCount;\n  const brickHeight = 20;\n  const brickOffsetTop = 30;\n  const totalBrickWidth = brickColumnCount * brickWidth + (brickColumnCount - 1) * brickPadding;\n  const brickOffsetLeft = (canvasSize.width - totalBrickWidth) / 2;\n  // const brickRowCount = 3;\n  // const brickColumnCount = 6;\n  // const brickWidth = 50;\n  // const brickHeight = 20;\n  // const brickPadding = 10;\n  // const brickOffsetTop = 30;\n  // const brickOffsetLeft = 25;\n\n  // 벽돌 배열 초기화\n  const bricks = [];\n  for (let c = 0; c < brickColumnCount; c++) {\n    bricks[c] = [];\n    for (let r = 0; r < brickRowCount; r++) {\n      bricks[c][r] = {\n        x: 0,\n        y: 0,\n        status: 1\n      };\n    }\n  }\n\n  // 공 그리기\n  const drawBall = ctx => {\n    ctx.beginPath();\n    ctx.arc(xRef.current, yRef.current, ballRadius, 0, Math.PI * 2);\n    ctx.fillStyle = \"#ff6347\";\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  // 패들 그리기\n  const drawPaddle = ctx => {\n    ctx.beginPath();\n    ctx.rect(paddleXRef.current, canvasHeight - paddleHeight, paddleWidth, paddleHeight);\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  // 벽돌 그리기 및 남은 벽돌 수 체크\n  const drawBricks = ctx => {\n    let remainingBricks = 0;\n    for (let c = 0; c < brickColumnCount; c++) {\n      for (let r = 0; r < brickRowCount; r++) {\n        const b = bricks[c][r];\n        if (b.status === 1) {\n          remainingBricks++;\n          const brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;\n          const brickY = r * (brickHeight + brickPadding) + brickOffsetTop;\n          b.x = brickX;\n          b.y = brickY;\n\n          // 기본 벽돌 스타일(색상)\n          //   ctx.beginPath();\n          //   ctx.rect(brickX, brickY, brickWidth, brickHeight);\n          //   ctx.fillStyle = \"#fbbf24\";\n          //   ctx.fill();\n          //   ctx.closePath();\n\n          // 🧱 이모지 스타일\n          //   ctx.font = \"24px Arial\";\n          //   ctx.textAlign = \"center\";\n          //   ctx.textBaseline = \"middle\";\n          //   ctx.fillText(\"🧱\", brickX + brickWidth / 2, brickY + brickHeight / 2);\n\n          // 구멍난 벽돌\n          // 벽돌 기본 사각형\n          ctx.beginPath();\n          ctx.fillStyle = \"#b91c1c\";\n          ctx.fillRect(brickX, brickY, brickWidth, brickHeight);\n          ctx.closePath();\n\n          // 벽돌 구멍 3개\n          const holeCount = 3;\n          for (let i = 0; i < holeCount; i++) {\n            ctx.beginPath();\n            ctx.arc(brickX + brickWidth * (0.2 + i * 0.3),\n            // 0.2, 0.5, 0.8 위치\n            brickY + brickHeight * 0.5, brickHeight * 0.2, 0, Math.PI * 2);\n            ctx.fillStyle = \"#1f1f1f\"; // 구멍 색\n            ctx.fill();\n            ctx.closePath();\n          }\n        }\n      }\n    }\n    // 모든 벽돌 제거 시 클리어 처리\n    if (remainingBricks === 0 && !gameClear) {\n      setGameClear(true);\n    }\n  };\n\n  // 점수 그리기\n  // const drawScore = (ctx) => {\n  //     ctx.font = \"14px Arial\";\n  //     ctx.fillStyle = \"#ffffff\";\n  //     ctx.fillText(`Score: ${scoreRef.current}`, 8, 20);\n  // };\n\n  // 게임 화면 안 메시지 박스\n  const drawEndMessage = (ctx, message) => {\n    ctx.font = \"24px Arial\";\n    ctx.fillStyle = \"#ffffff\";\n    ctx.textAlign = \"center\";\n    ctx.fillText(message, canvasWidth / 2, canvasHeight / 2);\n\n    // Restart 버튼 텍스트 안내\n    ctx.font = \"14px Arial\";\n    ctx.fillText(\"Press R to Restart\", canvasWidth / 2, canvasHeight / 2 + 30);\n  };\n\n  // 공과 벽돌 충돌 감지\n  const collisionDetection = () => {\n    for (let c = 0; c < brickColumnCount; c++) {\n      for (let r = 0; r < brickRowCount; r++) {\n        const b = bricks[c][r];\n        if (b.status === 1) {\n          if (xRef.current > b.x && xRef.current < b.x + brickWidth && yRef.current > b.y && yRef.current < b.y + brickHeight) {\n            dyRef.current = -dyRef.current;\n            b.status = 0;\n            scoreRef.current += 1;\n            setScore(scoreRef.current);\n          }\n        }\n      }\n    }\n  };\n\n  // 키보드 이벤트 핸들러\n  const keyDownHandler = e => {\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = true;else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = true;else if (e.key === \"r\" || e.key === \"R\") handleRestart();\n  };\n  const keyUpHandler = e => {\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = false;else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = false;\n  };\n\n  // 리스타트 버튼 클릭시 새로고침\n  const handleRestart = () => {\n    window.location.reload();\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    document.addEventListener(\"keydown\", keyDownHandler);\n    document.addEventListener(\"keyup\", keyUpHandler);\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      // drawScore(ctx);\n      drawBricks(ctx);\n      drawBall(ctx);\n      drawPaddle(ctx);\n      collisionDetection();\n\n      // 종료 메시지\n      if (gameOver) {\n        drawEndMessage(ctx, \"😢 GAME OVER\");\n        cancelAnimationFrame(animationRef.current);\n        return;\n      }\n      if (gameClear) {\n        drawEndMessage(ctx, \"🎉 CLEAR!!\");\n        cancelAnimationFrame(animationRef.current);\n        return;\n      }\n\n      // 벽 충돌 처리\n      if (xRef.current + dxRef.current > canvasWidth - ballRadius || xRef.current + dxRef.current < ballRadius) dxRef.current = -dxRef.current;\n      if (yRef.current + dyRef.current < ballRadius) dyRef.current = -dyRef.current;\n      // 바닥 충돌 처리 (게임 오버)\n      else if (yRef.current + dyRef.current > canvasHeight - ballRadius) {\n        if (xRef.current > paddleXRef.current && xRef.current < paddleXRef.current + paddleWidth) {\n          dyRef.current = -dyRef.current;\n        } else {\n          setGameOver(true);\n          return;\n        }\n      }\n\n      // 키 입력에 따른 패들 이동\n      if (keys.current.right && paddleXRef.current < canvasWidth - paddleWidth) paddleXRef.current += 5;else if (keys.current.left && paddleXRef.current > 0) paddleXRef.current -= 5;\n\n      // 공 이동\n      xRef.current += dxRef.current;\n      yRef.current += dyRef.current;\n      animationRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      document.removeEventListener(\"keydown\", keyDownHandler);\n      document.removeEventListener(\"keyup\", keyUpHandler);\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, [gameOver, gameClear]);\n\n  // 반응형 화면 추가\n  useEffect(() => {\n    const updateSize = () => {\n      const screenWidth = window.innerWidth;\n      const width = Math.min(screenWidth - 40, 480); // 최대 480px\n      const height = width * 3 / 4; // 4:3 비율 유지\n\n      setCanvasSize({\n        width,\n        height\n      });\n    };\n    updateSize(); // 첫 실행\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 flex flex-col items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      className: \"bg-black rounded shadow-md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 9\n  }, this);\n}\n_s(BrickBreaker, \"l3Nf3JmuhloGvfkl5+QnEiOUMKQ=\");\n_c = BrickBreaker;\nvar _c;\n$RefreshReg$(_c, \"BrickBreaker\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","BrickBreaker","_s","canvasRef","canvasSize","setCanvasSize","width","height","canvasWidth","canvasHeight","ballRadius","score","setScore","gameOver","setGameOver","gameClear","setGameClear","scoreRef","xRef","yRef","dxRef","dyRef","paddleHeight","paddleWidth","paddleXRef","keys","left","right","animationRef","brickColumnCount","brickRowCount","brickPadding","brickWidth","brickHeight","brickOffsetTop","totalBrickWidth","brickOffsetLeft","bricks","c","r","x","y","status","drawBall","ctx","beginPath","arc","current","Math","PI","fillStyle","fill","closePath","drawPaddle","rect","drawBricks","remainingBricks","b","brickX","brickY","fillRect","holeCount","i","drawEndMessage","message","font","textAlign","fillText","collisionDetection","keyDownHandler","e","key","handleRestart","keyUpHandler","window","location","reload","canvas","getContext","document","addEventListener","draw","clearRect","cancelAnimationFrame","requestAnimationFrame","removeEventListener","updateSize","screenWidth","innerWidth","min","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/games/BrickBreaker.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function BrickBreaker() {\r\n    const canvasRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 400, height: 300 });\r\n\r\n    // 게임 설정값들\r\n    const canvasWidth = canvasSize.width;   //400\r\n    const canvasHeight = canvasSize.height; //300\r\n    const ballRadius = canvasSize.width * 0.025 //10;\r\n\r\n    // 점수 및 게임 상태\r\n    const [score, setScore] = useState(0);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [gameClear, setGameClear] = useState(false);\r\n    const scoreRef = useRef(0);\r\n\r\n    // 공 상태 (x, y, 속도)\r\n    const xRef = useRef(canvasWidth / 2);\r\n    const yRef = useRef(canvasHeight - 60);\r\n    const dxRef = useRef(2);\r\n    const dyRef = useRef(-2);\r\n\r\n    // 패들 상태\r\n    const paddleHeight = canvasSize.height * 0.03; // 높이의 3% (원래값 10)\r\n    const paddleWidth = canvasSize.width * 0.25;   // 너비의 25% (원래값 75)\r\n    const paddleXRef = useRef((canvasWidth - paddleWidth) / 2);\r\n    const keys = useRef({ left: false, right: false });\r\n    const animationRef = useRef(null);\r\n\r\n    // 벽돌 설정값\r\n    const brickColumnCount = 6;\r\n    const brickRowCount = 3;\r\n    const brickPadding = 10;\r\n    const brickWidth = (canvasSize.width - brickPadding) / brickColumnCount;\r\n    const brickHeight = 20;\r\n    const brickOffsetTop = 30;\r\n    const totalBrickWidth = brickColumnCount * brickWidth + (brickColumnCount - 1) * brickPadding;\r\n    const brickOffsetLeft = (canvasSize.width - totalBrickWidth) / 2;\r\n    // const brickRowCount = 3;\r\n    // const brickColumnCount = 6;\r\n    // const brickWidth = 50;\r\n    // const brickHeight = 20;\r\n    // const brickPadding = 10;\r\n    // const brickOffsetTop = 30;\r\n    // const brickOffsetLeft = 25;\r\n\r\n    // 벽돌 배열 초기화\r\n    const bricks = [];\r\n    for (let c = 0; c < brickColumnCount; c++) {\r\n        bricks[c] = [];\r\n        for (let r = 0; r < brickRowCount; r++) {\r\n            bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n        }\r\n    }\r\n\r\n    // 공 그리기\r\n    const drawBall = (ctx) => {\r\n        ctx.beginPath();\r\n        ctx.arc(xRef.current, yRef.current, ballRadius, 0, Math.PI * 2);\r\n        ctx.fillStyle = \"#ff6347\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    };\r\n\r\n    // 패들 그리기\r\n    const drawPaddle = (ctx) => {\r\n        ctx.beginPath();\r\n        ctx.rect(paddleXRef.current, canvasHeight - paddleHeight, paddleWidth, paddleHeight);\r\n        ctx.fillStyle = \"#0095DD\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    };\r\n\r\n    // 벽돌 그리기 및 남은 벽돌 수 체크\r\n    const drawBricks = (ctx) => {\r\n        let remainingBricks = 0;\r\n        for (let c = 0; c < brickColumnCount; c++) {\r\n            for (let r = 0; r < brickRowCount; r++) {\r\n                const b = bricks[c][r];\r\n                if (b.status === 1) {\r\n                    remainingBricks++;\r\n                    const brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;\r\n                    const brickY = r * (brickHeight + brickPadding) + brickOffsetTop;\r\n                    b.x = brickX;\r\n                    b.y = brickY;\r\n\r\n                    // 기본 벽돌 스타일(색상)\r\n                    //   ctx.beginPath();\r\n                    //   ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n                    //   ctx.fillStyle = \"#fbbf24\";\r\n                    //   ctx.fill();\r\n                    //   ctx.closePath();\r\n\r\n                    // 🧱 이모지 스타일\r\n                    //   ctx.font = \"24px Arial\";\r\n                    //   ctx.textAlign = \"center\";\r\n                    //   ctx.textBaseline = \"middle\";\r\n                    //   ctx.fillText(\"🧱\", brickX + brickWidth / 2, brickY + brickHeight / 2);\r\n\r\n\r\n                    // 구멍난 벽돌\r\n                    // 벽돌 기본 사각형\r\n                    ctx.beginPath();\r\n                    ctx.fillStyle = \"#b91c1c\";\r\n                    ctx.fillRect(brickX, brickY, brickWidth, brickHeight);\r\n                    ctx.closePath();\r\n\r\n                    // 벽돌 구멍 3개\r\n                    const holeCount = 3;\r\n                    for (let i = 0; i < holeCount; i++) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(\r\n                            brickX + brickWidth * (0.2 + i * 0.3), // 0.2, 0.5, 0.8 위치\r\n                            brickY + brickHeight * 0.5,\r\n                            brickHeight * 0.2,\r\n                            0,\r\n                            Math.PI * 2\r\n                        );\r\n                        ctx.fillStyle = \"#1f1f1f\"; // 구멍 색\r\n                        ctx.fill();\r\n                        ctx.closePath();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 모든 벽돌 제거 시 클리어 처리\r\n        if (remainingBricks === 0 && !gameClear) {\r\n            setGameClear(true);\r\n        }\r\n    };\r\n\r\n    // 점수 그리기\r\n    // const drawScore = (ctx) => {\r\n    //     ctx.font = \"14px Arial\";\r\n    //     ctx.fillStyle = \"#ffffff\";\r\n    //     ctx.fillText(`Score: ${scoreRef.current}`, 8, 20);\r\n    // };\r\n\r\n    // 게임 화면 안 메시지 박스\r\n    const drawEndMessage = (ctx, message) => {\r\n        ctx.font = \"24px Arial\";\r\n        ctx.fillStyle = \"#ffffff\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.fillText(message, canvasWidth / 2, canvasHeight / 2);\r\n\r\n        // Restart 버튼 텍스트 안내\r\n        ctx.font = \"14px Arial\";\r\n        ctx.fillText(\"Press R to Restart\", canvasWidth / 2, canvasHeight / 2 + 30);\r\n    };\r\n\r\n    // 공과 벽돌 충돌 감지\r\n    const collisionDetection = () => {\r\n        for (let c = 0; c < brickColumnCount; c++) {\r\n            for (let r = 0; r < brickRowCount; r++) {\r\n                const b = bricks[c][r];\r\n                if (b.status === 1) {\r\n                    if (\r\n                        xRef.current > b.x &&\r\n                        xRef.current < b.x + brickWidth &&\r\n                        yRef.current > b.y &&\r\n                        yRef.current < b.y + brickHeight\r\n                    ) {\r\n                        dyRef.current = -dyRef.current;\r\n                        b.status = 0;\r\n                        scoreRef.current += 1;\r\n                        setScore(scoreRef.current);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // 키보드 이벤트 핸들러\r\n    const keyDownHandler = (e) => {\r\n        if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = true;\r\n        else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = true;\r\n        else if (e.key === \"r\" || e.key === \"R\") handleRestart();\r\n    };\r\n\r\n    const keyUpHandler = (e) => {\r\n        if (e.key === \"Right\" || e.key === \"ArrowRight\") keys.current.right = false;\r\n        else if (e.key === \"Left\" || e.key === \"ArrowLeft\") keys.current.left = false;\r\n    };\r\n\r\n    // 리스타트 버튼 클릭시 새로고침\r\n    const handleRestart = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        document.addEventListener(\"keydown\", keyDownHandler);\r\n        document.addEventListener(\"keyup\", keyUpHandler);\r\n\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            // drawScore(ctx);\r\n            drawBricks(ctx);\r\n            drawBall(ctx);\r\n            drawPaddle(ctx);\r\n            collisionDetection();\r\n\r\n            // 종료 메시지\r\n            if (gameOver) {\r\n                drawEndMessage(ctx, \"😢 GAME OVER\");\r\n                cancelAnimationFrame(animationRef.current);\r\n                return;\r\n            }\r\n\r\n            if (gameClear) {\r\n                drawEndMessage(ctx, \"🎉 CLEAR!!\");\r\n                cancelAnimationFrame(animationRef.current);\r\n                return;\r\n            }\r\n\r\n            // 벽 충돌 처리\r\n            if (\r\n                xRef.current + dxRef.current > canvasWidth - ballRadius ||\r\n                xRef.current + dxRef.current < ballRadius\r\n            ) dxRef.current = -dxRef.current;\r\n            if (yRef.current + dyRef.current < ballRadius) dyRef.current = -dyRef.current;\r\n            // 바닥 충돌 처리 (게임 오버)\r\n            else if (yRef.current + dyRef.current > canvasHeight - ballRadius) {\r\n                if (\r\n                    xRef.current > paddleXRef.current &&\r\n                    xRef.current < paddleXRef.current + paddleWidth\r\n                ) {\r\n                    dyRef.current = -dyRef.current;\r\n                } else {\r\n                    setGameOver(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // 키 입력에 따른 패들 이동\r\n            if (keys.current.right && paddleXRef.current < canvasWidth - paddleWidth)\r\n                paddleXRef.current += 5;\r\n            else if (keys.current.left && paddleXRef.current > 0)\r\n                paddleXRef.current -= 5;\r\n\r\n            // 공 이동\r\n            xRef.current += dxRef.current;\r\n            yRef.current += dyRef.current;\r\n\r\n            animationRef.current = requestAnimationFrame(draw);\r\n        };\r\n\r\n        draw();\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", keyDownHandler);\r\n            document.removeEventListener(\"keyup\", keyUpHandler);\r\n            cancelAnimationFrame(animationRef.current);\r\n        };\r\n    }, [gameOver, gameClear]);\r\n\r\n    // 반응형 화면 추가\r\n    useEffect(() => {\r\n        const updateSize = () => {\r\n            const screenWidth = window.innerWidth;\r\n            const width = Math.min(screenWidth - 40, 480); // 최대 480px\r\n            const height = (width * 3) / 4; // 4:3 비율 유지\r\n\r\n            setCanvasSize({ width, height });\r\n        };\r\n\r\n        updateSize(); // 첫 실행\r\n        window.addEventListener(\"resize\", updateSize);\r\n        return () => window.removeEventListener(\"resize\", updateSize);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"mt-8 flex flex-col items-center\">\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={canvasSize.width}\r\n                height={canvasSize.height}\r\n                className=\"bg-black rounded shadow-md\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAAC;;EAEzE;EACA,MAAMC,WAAW,GAAGJ,UAAU,CAACE,KAAK,CAAC,CAAG;EACxC,MAAMG,YAAY,GAAGL,UAAU,CAACG,MAAM,CAAC,CAAC;EACxC,MAAMG,UAAU,GAAGN,UAAU,CAACE,KAAK,GAAG,KAAK,EAAC;;EAE5C;EACA,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMmB,QAAQ,GAAGpB,MAAM,CAAC,CAAC,CAAC;;EAE1B;EACA,MAAMqB,IAAI,GAAGrB,MAAM,CAACW,WAAW,GAAG,CAAC,CAAC;EACpC,MAAMW,IAAI,GAAGtB,MAAM,CAACY,YAAY,GAAG,EAAE,CAAC;EACtC,MAAMW,KAAK,GAAGvB,MAAM,CAAC,CAAC,CAAC;EACvB,MAAMwB,KAAK,GAAGxB,MAAM,CAAC,CAAC,CAAC,CAAC;;EAExB;EACA,MAAMyB,YAAY,GAAGlB,UAAU,CAACG,MAAM,GAAG,IAAI,CAAC,CAAC;EAC/C,MAAMgB,WAAW,GAAGnB,UAAU,CAACE,KAAK,GAAG,IAAI,CAAC,CAAG;EAC/C,MAAMkB,UAAU,GAAG3B,MAAM,CAAC,CAACW,WAAW,GAAGe,WAAW,IAAI,CAAC,CAAC;EAC1D,MAAME,IAAI,GAAG5B,MAAM,CAAC;IAAE6B,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,CAAC;EAClD,MAAMC,YAAY,GAAG/B,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAMgC,gBAAgB,GAAG,CAAC;EAC1B,MAAMC,aAAa,GAAG,CAAC;EACvB,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,UAAU,GAAG,CAAC5B,UAAU,CAACE,KAAK,GAAGyB,YAAY,IAAIF,gBAAgB;EACvE,MAAMI,WAAW,GAAG,EAAE;EACtB,MAAMC,cAAc,GAAG,EAAE;EACzB,MAAMC,eAAe,GAAGN,gBAAgB,GAAGG,UAAU,GAAG,CAACH,gBAAgB,GAAG,CAAC,IAAIE,YAAY;EAC7F,MAAMK,eAAe,GAAG,CAAChC,UAAU,CAACE,KAAK,GAAG6B,eAAe,IAAI,CAAC;EAChE;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAME,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,gBAAgB,EAAES,CAAC,EAAE,EAAE;IACvCD,MAAM,CAACC,CAAC,CAAC,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,aAAa,EAAES,CAAC,EAAE,EAAE;MACpCF,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;IAC5C;EACJ;;EAEA;EACA,MAAMC,QAAQ,GAAIC,GAAG,IAAK;IACtBA,GAAG,CAACC,SAAS,CAAC,CAAC;IACfD,GAAG,CAACE,GAAG,CAAC5B,IAAI,CAAC6B,OAAO,EAAE5B,IAAI,CAAC4B,OAAO,EAAErC,UAAU,EAAE,CAAC,EAAEsC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;IAC/DL,GAAG,CAACM,SAAS,GAAG,SAAS;IACzBN,GAAG,CAACO,IAAI,CAAC,CAAC;IACVP,GAAG,CAACQ,SAAS,CAAC,CAAC;EACnB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIT,GAAG,IAAK;IACxBA,GAAG,CAACC,SAAS,CAAC,CAAC;IACfD,GAAG,CAACU,IAAI,CAAC9B,UAAU,CAACuB,OAAO,EAAEtC,YAAY,GAAGa,YAAY,EAAEC,WAAW,EAAED,YAAY,CAAC;IACpFsB,GAAG,CAACM,SAAS,GAAG,SAAS;IACzBN,GAAG,CAACO,IAAI,CAAC,CAAC;IACVP,GAAG,CAACQ,SAAS,CAAC,CAAC;EACnB,CAAC;;EAED;EACA,MAAMG,UAAU,GAAIX,GAAG,IAAK;IACxB,IAAIY,eAAe,GAAG,CAAC;IACvB,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,gBAAgB,EAAES,CAAC,EAAE,EAAE;MACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,aAAa,EAAES,CAAC,EAAE,EAAE;QACpC,MAAMkB,CAAC,GAAGpB,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC;QACtB,IAAIkB,CAAC,CAACf,MAAM,KAAK,CAAC,EAAE;UAChBc,eAAe,EAAE;UACjB,MAAME,MAAM,GAAGpB,CAAC,IAAIN,UAAU,GAAGD,YAAY,CAAC,GAAGK,eAAe;UAChE,MAAMuB,MAAM,GAAGpB,CAAC,IAAIN,WAAW,GAAGF,YAAY,CAAC,GAAGG,cAAc;UAChEuB,CAAC,CAACjB,CAAC,GAAGkB,MAAM;UACZD,CAAC,CAAChB,CAAC,GAAGkB,MAAM;;UAEZ;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA;UACA;UACA;;UAGA;UACA;UACAf,GAAG,CAACC,SAAS,CAAC,CAAC;UACfD,GAAG,CAACM,SAAS,GAAG,SAAS;UACzBN,GAAG,CAACgB,QAAQ,CAACF,MAAM,EAAEC,MAAM,EAAE3B,UAAU,EAAEC,WAAW,CAAC;UACrDW,GAAG,CAACQ,SAAS,CAAC,CAAC;;UAEf;UACA,MAAMS,SAAS,GAAG,CAAC;UACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,EAAEC,CAAC,EAAE,EAAE;YAChClB,GAAG,CAACC,SAAS,CAAC,CAAC;YACfD,GAAG,CAACE,GAAG,CACHY,MAAM,GAAG1B,UAAU,IAAI,GAAG,GAAG8B,CAAC,GAAG,GAAG,CAAC;YAAE;YACvCH,MAAM,GAAG1B,WAAW,GAAG,GAAG,EAC1BA,WAAW,GAAG,GAAG,EACjB,CAAC,EACDe,IAAI,CAACC,EAAE,GAAG,CACd,CAAC;YACDL,GAAG,CAACM,SAAS,GAAG,SAAS,CAAC,CAAC;YAC3BN,GAAG,CAACO,IAAI,CAAC,CAAC;YACVP,GAAG,CAACQ,SAAS,CAAC,CAAC;UACnB;QACJ;MACJ;IACJ;IACA;IACA,IAAII,eAAe,KAAK,CAAC,IAAI,CAACzC,SAAS,EAAE;MACrCC,YAAY,CAAC,IAAI,CAAC;IACtB;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAM+C,cAAc,GAAGA,CAACnB,GAAG,EAAEoB,OAAO,KAAK;IACrCpB,GAAG,CAACqB,IAAI,GAAG,YAAY;IACvBrB,GAAG,CAACM,SAAS,GAAG,SAAS;IACzBN,GAAG,CAACsB,SAAS,GAAG,QAAQ;IACxBtB,GAAG,CAACuB,QAAQ,CAACH,OAAO,EAAExD,WAAW,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,CAAC;;IAExD;IACAmC,GAAG,CAACqB,IAAI,GAAG,YAAY;IACvBrB,GAAG,CAACuB,QAAQ,CAAC,oBAAoB,EAAE3D,WAAW,GAAG,CAAC,EAAEC,YAAY,GAAG,CAAC,GAAG,EAAE,CAAC;EAC9E,CAAC;;EAED;EACA,MAAM2D,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,gBAAgB,EAAES,CAAC,EAAE,EAAE;MACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,aAAa,EAAES,CAAC,EAAE,EAAE;QACpC,MAAMkB,CAAC,GAAGpB,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC;QACtB,IAAIkB,CAAC,CAACf,MAAM,KAAK,CAAC,EAAE;UAChB,IACIxB,IAAI,CAAC6B,OAAO,GAAGU,CAAC,CAACjB,CAAC,IAClBtB,IAAI,CAAC6B,OAAO,GAAGU,CAAC,CAACjB,CAAC,GAAGR,UAAU,IAC/Bb,IAAI,CAAC4B,OAAO,GAAGU,CAAC,CAAChB,CAAC,IAClBtB,IAAI,CAAC4B,OAAO,GAAGU,CAAC,CAAChB,CAAC,GAAGR,WAAW,EAClC;YACEZ,KAAK,CAAC0B,OAAO,GAAG,CAAC1B,KAAK,CAAC0B,OAAO;YAC9BU,CAAC,CAACf,MAAM,GAAG,CAAC;YACZzB,QAAQ,CAAC8B,OAAO,IAAI,CAAC;YACrBnC,QAAQ,CAACK,QAAQ,CAAC8B,OAAO,CAAC;UAC9B;QACJ;MACJ;IACJ;EACJ,CAAC;;EAED;EACA,MAAMsB,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,YAAY,EAAE9C,IAAI,CAACsB,OAAO,CAACpB,KAAK,GAAG,IAAI,CAAC,KACtE,IAAI2C,CAAC,CAACC,GAAG,KAAK,MAAM,IAAID,CAAC,CAACC,GAAG,KAAK,WAAW,EAAE9C,IAAI,CAACsB,OAAO,CAACrB,IAAI,GAAG,IAAI,CAAC,KACxE,IAAI4C,CAAC,CAACC,GAAG,KAAK,GAAG,IAAID,CAAC,CAACC,GAAG,KAAK,GAAG,EAAEC,aAAa,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IACxB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAID,CAAC,CAACC,GAAG,KAAK,YAAY,EAAE9C,IAAI,CAACsB,OAAO,CAACpB,KAAK,GAAG,KAAK,CAAC,KACvE,IAAI2C,CAAC,CAACC,GAAG,KAAK,MAAM,IAAID,CAAC,CAACC,GAAG,KAAK,WAAW,EAAE9C,IAAI,CAACsB,OAAO,CAACrB,IAAI,GAAG,KAAK;EACjF,CAAC;;EAED;EACA,MAAM8C,aAAa,GAAGA,CAAA,KAAM;IACxBE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC5B,CAAC;EAEDhF,SAAS,CAAC,MAAM;IACZ,MAAMiF,MAAM,GAAG1E,SAAS,CAAC4C,OAAO;IAChC,MAAMH,GAAG,GAAGiC,MAAM,CAACC,UAAU,CAAC,IAAI,CAAC;IAEnCC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEX,cAAc,CAAC;IACpDU,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEP,YAAY,CAAC;IAEhD,MAAMQ,IAAI,GAAGA,CAAA,KAAM;MACfrC,GAAG,CAACsC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACvE,KAAK,EAAEuE,MAAM,CAACtE,MAAM,CAAC;MAChD;MACAgD,UAAU,CAACX,GAAG,CAAC;MACfD,QAAQ,CAACC,GAAG,CAAC;MACbS,UAAU,CAACT,GAAG,CAAC;MACfwB,kBAAkB,CAAC,CAAC;;MAEpB;MACA,IAAIvD,QAAQ,EAAE;QACVkD,cAAc,CAACnB,GAAG,EAAE,cAAc,CAAC;QACnCuC,oBAAoB,CAACvD,YAAY,CAACmB,OAAO,CAAC;QAC1C;MACJ;MAEA,IAAIhC,SAAS,EAAE;QACXgD,cAAc,CAACnB,GAAG,EAAE,YAAY,CAAC;QACjCuC,oBAAoB,CAACvD,YAAY,CAACmB,OAAO,CAAC;QAC1C;MACJ;;MAEA;MACA,IACI7B,IAAI,CAAC6B,OAAO,GAAG3B,KAAK,CAAC2B,OAAO,GAAGvC,WAAW,GAAGE,UAAU,IACvDQ,IAAI,CAAC6B,OAAO,GAAG3B,KAAK,CAAC2B,OAAO,GAAGrC,UAAU,EAC3CU,KAAK,CAAC2B,OAAO,GAAG,CAAC3B,KAAK,CAAC2B,OAAO;MAChC,IAAI5B,IAAI,CAAC4B,OAAO,GAAG1B,KAAK,CAAC0B,OAAO,GAAGrC,UAAU,EAAEW,KAAK,CAAC0B,OAAO,GAAG,CAAC1B,KAAK,CAAC0B,OAAO;MAC7E;MAAA,KACK,IAAI5B,IAAI,CAAC4B,OAAO,GAAG1B,KAAK,CAAC0B,OAAO,GAAGtC,YAAY,GAAGC,UAAU,EAAE;QAC/D,IACIQ,IAAI,CAAC6B,OAAO,GAAGvB,UAAU,CAACuB,OAAO,IACjC7B,IAAI,CAAC6B,OAAO,GAAGvB,UAAU,CAACuB,OAAO,GAAGxB,WAAW,EACjD;UACEF,KAAK,CAAC0B,OAAO,GAAG,CAAC1B,KAAK,CAAC0B,OAAO;QAClC,CAAC,MAAM;UACHjC,WAAW,CAAC,IAAI,CAAC;UACjB;QACJ;MACJ;;MAEA;MACA,IAAIW,IAAI,CAACsB,OAAO,CAACpB,KAAK,IAAIH,UAAU,CAACuB,OAAO,GAAGvC,WAAW,GAAGe,WAAW,EACpEC,UAAU,CAACuB,OAAO,IAAI,CAAC,CAAC,KACvB,IAAItB,IAAI,CAACsB,OAAO,CAACrB,IAAI,IAAIF,UAAU,CAACuB,OAAO,GAAG,CAAC,EAChDvB,UAAU,CAACuB,OAAO,IAAI,CAAC;;MAE3B;MACA7B,IAAI,CAAC6B,OAAO,IAAI3B,KAAK,CAAC2B,OAAO;MAC7B5B,IAAI,CAAC4B,OAAO,IAAI1B,KAAK,CAAC0B,OAAO;MAE7BnB,YAAY,CAACmB,OAAO,GAAGqC,qBAAqB,CAACH,IAAI,CAAC;IACtD,CAAC;IAEDA,IAAI,CAAC,CAAC;IAEN,OAAO,MAAM;MACTF,QAAQ,CAACM,mBAAmB,CAAC,SAAS,EAAEhB,cAAc,CAAC;MACvDU,QAAQ,CAACM,mBAAmB,CAAC,OAAO,EAAEZ,YAAY,CAAC;MACnDU,oBAAoB,CAACvD,YAAY,CAACmB,OAAO,CAAC;IAC9C,CAAC;EACL,CAAC,EAAE,CAAClC,QAAQ,EAAEE,SAAS,CAAC,CAAC;;EAEzB;EACAnB,SAAS,CAAC,MAAM;IACZ,MAAM0F,UAAU,GAAGA,CAAA,KAAM;MACrB,MAAMC,WAAW,GAAGb,MAAM,CAACc,UAAU;MACrC,MAAMlF,KAAK,GAAG0C,IAAI,CAACyC,GAAG,CAACF,WAAW,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;MAC/C,MAAMhF,MAAM,GAAID,KAAK,GAAG,CAAC,GAAI,CAAC,CAAC,CAAC;;MAEhCD,aAAa,CAAC;QAAEC,KAAK;QAAEC;MAAO,CAAC,CAAC;IACpC,CAAC;IAED+E,UAAU,CAAC,CAAC,CAAC,CAAC;IACdZ,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAEM,UAAU,CAAC;IAC7C,OAAO,MAAMZ,MAAM,CAACW,mBAAmB,CAAC,QAAQ,EAAEC,UAAU,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItF,OAAA;IAAK0F,SAAS,EAAC,iCAAiC;IAAAC,QAAA,eAC5C3F,OAAA;MACI4F,GAAG,EAAEzF,SAAU;MACfG,KAAK,EAAEF,UAAU,CAACE,KAAM;MACxBC,MAAM,EAAEH,UAAU,CAACG,MAAO;MAC1BmF,SAAS,EAAC;IAA4B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC9F,EAAA,CA1RuBD,YAAY;AAAAgG,EAAA,GAAZhG,YAAY;AAAA,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}