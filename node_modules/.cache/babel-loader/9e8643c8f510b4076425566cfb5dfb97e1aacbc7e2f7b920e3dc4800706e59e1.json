{"ast":null,"code":"import{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const LanguageContext=/*#__PURE__*/createContext();export function LanguageProvider(_ref){let{children}=_ref;const[language,setLanguage]=useState(\"en\");// 초기 언어: 영어\nconst toggleLanguage=()=>{setLanguage(prev=>prev===\"en\"?\"ko\":\"en\");};return/*#__PURE__*/_jsx(LanguageContext.Provider,{value:{language,toggleLanguage},children:children});}export function useLanguage(){return useContext(LanguageContext);}","map":{"version":3,"names":["createContext","useContext","useState","jsx","_jsx","LanguageContext","LanguageProvider","_ref","children","language","setLanguage","toggleLanguage","prev","Provider","value","useLanguage"],"sources":["C:/workspace/portfoilo/src/context/LanguageContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport function LanguageProvider({ children }) {\r\n  const [language, setLanguage] = useState(\"en\"); // 초기 언어: 영어\r\n\r\n  const toggleLanguage = () => {\r\n    setLanguage((prev) => (prev === \"en\" ? \"ko\" : \"en\"));\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, toggleLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useLanguage() {\r\n  return useContext(LanguageContext);\r\n}"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5D,KAAM,CAAAC,eAAe,cAAGL,aAAa,CAAC,CAAC,CAEvC,MAAO,SAAS,CAAAM,gBAAgBA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAAE;AAEhD,KAAM,CAAAS,cAAc,CAAGA,CAAA,GAAM,CAC3BD,WAAW,CAAEE,IAAI,EAAMA,IAAI,GAAK,IAAI,CAAG,IAAI,CAAG,IAAK,CAAC,CACtD,CAAC,CAED,mBACER,IAAA,CAACC,eAAe,CAACQ,QAAQ,EAACC,KAAK,CAAE,CAAEL,QAAQ,CAAEE,cAAe,CAAE,CAAAH,QAAA,CAC3DA,QAAQ,CACe,CAAC,CAE/B,CAEA,MAAO,SAAS,CAAAO,WAAWA,CAAA,CAAG,CAC5B,MAAO,CAAAd,UAAU,CAACI,eAAe,CAAC,CACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}