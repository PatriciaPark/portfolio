{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\games\\\\BrickGirlRT.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrickGirlRT = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const spriteRef = useRef(new Image());\n\n  // 스프라이트 설정\n  const frameWidth = 335;\n  const frameHeight = 512;\n  const numCols = 3;\n  const numRows = 2;\n  const scale = 0.2;\n  const frameX = useRef(0);\n  const frameY = useRef(0); // 0: 걷기, 1: 점프 시로 변경 예정\n  const frameCount = useRef(0);\n  const [spriteLoaded, setSpriteLoaded] = useState(false);\n\n  // 캐릭터 위치 및 점프 관련 변수\n  let girlX = 50;\n  let girlY = 300;\n  let isJumping = false;\n  let velocityY = 0;\n  const gravity = 0.8;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n\n    // 캔버스 사이즈 설정\n    canvas.width = 800;\n    canvas.height = 400;\n\n    // 스프라이트 이미지 로드\n    spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\n    spriteRef.current.onload = () => {\n      setSpriteLoaded(true);\n    };\n\n    // 키보드 이벤트 처리\n    const handleKeyDown = e => {\n      if (e.code === 'Space') {\n        e.preventDefault(); // 스페이스바 스크롤 방지\n        throwBrick();\n      } else if (e.code === 'ArrowUp') {\n        if (!isJumping) {\n          isJumping = true;\n          velocityY = -12;\n        }\n      }\n    };\n\n    // 모바일 터치 조작\n    const handleTouchStart = e => {\n      const touchX = e.touches[0].clientX;\n      if (touchX < canvas.width / 2) {\n        // 왼쪽 터치 → 점프\n        if (!isJumping) {\n          isJumping = true;\n          velocityY = -12;\n        }\n      } else {\n        // 오른쪽 터치 → 공격\n        throwBrick();\n      }\n    };\n\n    // 애니메이션 프레임 업데이트\n    const updateFrame = () => {\n      frameCount.current++;\n      if (frameCount.current % 10 === 0) {\n        frameX.current = (frameX.current + 1) % numCols;\n      }\n    };\n\n    // 캐릭터 그리기\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 중력 적용 및 점프 처리\n      if (isJumping) {\n        velocityY += gravity;\n        girlY += velocityY;\n        if (girlY >= 300) {\n          girlY = 300;\n          isJumping = false;\n          velocityY = 0;\n        }\n      }\n\n      // 스프라이트 그리기\n      if (spriteLoaded) {\n        updateFrame();\n        ctx.drawImage(spriteRef.current, frameX.current * frameWidth, frameY.current * frameHeight, frameWidth, frameHeight, girlX, girlY, frameWidth * scale, frameHeight * scale);\n      } else {\n        // 대체 이미지 (로딩 전)\n        ctx.fillStyle = 'hotpink';\n        ctx.fillRect(girlX, girlY, 30, 30);\n      }\n      animationFrameId = requestAnimationFrame(draw);\n    };\n\n    // 초기 설정\n    window.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('touchstart', handleTouchStart);\n    draw();\n\n    // 정리 함수\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [spriteLoaded]);\n\n  // 벽돌 던지기 함수 (포물선 구현은 추후 추가 예정)\n  const throwBrick = () => {\n    console.log('벽돌 던지기! (throwBrick 실행됨)');\n    // 여기에 포물선 투사체 로직 추가 예정\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Brick Girl: Run & Throw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '2px solid #999'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u2B06\\uFE0F: Jump / Space: \\uD83E\\uDDF1 (\\uBAA8\\uBC14\\uC77C\\uC740 \\uD654\\uBA74 \\uC88C\\uC6B0 \\uD130\\uCE58)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(BrickGirlRT, \"STzmZazA8iYMc4dpZ2Vv/eItjEg=\");\n_c = BrickGirlRT;\nexport default BrickGirlRT;\nvar _c;\n$RefreshReg$(_c, \"BrickGirlRT\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","BrickGirlRT","_s","canvasRef","spriteRef","Image","frameWidth","frameHeight","numCols","numRows","scale","frameX","frameY","frameCount","spriteLoaded","setSpriteLoaded","girlX","girlY","isJumping","velocityY","gravity","canvas","current","ctx","getContext","animationFrameId","width","height","src","process","env","PUBLIC_URL","onload","handleKeyDown","e","code","preventDefault","throwBrick","handleTouchStart","touchX","touches","clientX","updateFrame","draw","clearRect","drawImage","fillStyle","fillRect","requestAnimationFrame","window","addEventListener","removeEventListener","cancelAnimationFrame","console","log","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/games/BrickGirlRT.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst BrickGirlRT = () => {\r\n  const canvasRef = useRef(null);\r\n  const spriteRef = useRef(new Image());\r\n\r\n  // 스프라이트 설정\r\n  const frameWidth = 335;\r\n  const frameHeight = 512;\r\n  const numCols = 3;\r\n  const numRows = 2;\r\n  const scale = 0.2;\r\n\r\n  const frameX = useRef(0);\r\n  const frameY = useRef(0); // 0: 걷기, 1: 점프 시로 변경 예정\r\n  const frameCount = useRef(0);\r\n  const [spriteLoaded, setSpriteLoaded] = useState(false);\r\n\r\n  // 캐릭터 위치 및 점프 관련 변수\r\n  let girlX = 50;\r\n  let girlY = 300;\r\n  let isJumping = false;\r\n  let velocityY = 0;\r\n  const gravity = 0.8;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let animationFrameId;\r\n\r\n    // 캔버스 사이즈 설정\r\n    canvas.width = 800;\r\n    canvas.height = 400;\r\n\r\n    // 스프라이트 이미지 로드\r\n    spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\r\n    spriteRef.current.onload = () => {\r\n      setSpriteLoaded(true);\r\n    };\r\n\r\n    // 키보드 이벤트 처리\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === 'Space') {\r\n        e.preventDefault(); // 스페이스바 스크롤 방지\r\n        throwBrick();\r\n      } else if (e.code === 'ArrowUp') {\r\n        if (!isJumping) {\r\n          isJumping = true;\r\n          velocityY = -12;\r\n        }\r\n      }\r\n    };\r\n\r\n    // 모바일 터치 조작\r\n    const handleTouchStart = (e) => {\r\n      const touchX = e.touches[0].clientX;\r\n\r\n      if (touchX < canvas.width / 2) {\r\n        // 왼쪽 터치 → 점프\r\n        if (!isJumping) {\r\n          isJumping = true;\r\n          velocityY = -12;\r\n        }\r\n      } else {\r\n        // 오른쪽 터치 → 공격\r\n        throwBrick();\r\n      }\r\n    };\r\n\r\n    // 애니메이션 프레임 업데이트\r\n    const updateFrame = () => {\r\n      frameCount.current++;\r\n      if (frameCount.current % 10 === 0) {\r\n        frameX.current = (frameX.current + 1) % numCols;\r\n      }\r\n    };\r\n\r\n    // 캐릭터 그리기\r\n    const draw = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // 중력 적용 및 점프 처리\r\n      if (isJumping) {\r\n        velocityY += gravity;\r\n        girlY += velocityY;\r\n\r\n        if (girlY >= 300) {\r\n          girlY = 300;\r\n          isJumping = false;\r\n          velocityY = 0;\r\n        }\r\n      }\r\n\r\n      // 스프라이트 그리기\r\n      if (spriteLoaded) {\r\n        updateFrame();\r\n        ctx.drawImage(\r\n          spriteRef.current,\r\n          frameX.current * frameWidth,\r\n          frameY.current * frameHeight,\r\n          frameWidth,\r\n          frameHeight,\r\n          girlX,\r\n          girlY,\r\n          frameWidth * scale,\r\n          frameHeight * scale\r\n        );\r\n      } else {\r\n        // 대체 이미지 (로딩 전)\r\n        ctx.fillStyle = 'hotpink';\r\n        ctx.fillRect(girlX, girlY, 30, 30);\r\n      }\r\n\r\n      animationFrameId = requestAnimationFrame(draw);\r\n    };\r\n\r\n    // 초기 설정\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    canvas.addEventListener('touchstart', handleTouchStart);\r\n    draw();\r\n\r\n    // 정리 함수\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      canvas.removeEventListener('touchstart', handleTouchStart);\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [spriteLoaded]);\r\n\r\n  // 벽돌 던지기 함수 (포물선 구현은 추후 추가 예정)\r\n  const throwBrick = () => {\r\n    console.log('벽돌 던지기! (throwBrick 실행됨)');\r\n    // 여기에 포물선 투사체 로직 추가 예정\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <h2>Brick Girl: Run & Throw</h2>\r\n      <canvas ref={canvasRef} style={{ border: '2px solid #999' }} />\r\n      <p>⬆️: Jump / Space: 🧱 (모바일은 화면 좌우 터치)</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrickGirlRT;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}