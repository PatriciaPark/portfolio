{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\games\\\\BrickGirlRT.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrickGirlRT = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const spriteRef = useRef(null); // 스프라이트 이미지 객체\n  const [canvasSize] = useState({\n    width: 800,\n    height: 400\n  }); // 실제 해상도 기준\n  const [spriteLoaded, setSpriteLoaded] = useState(false);\n\n  // 스프라이트 설정\n  const frameWidth = 335;\n  const frameHeight = 512;\n  const numCols = 3;\n  const scale = 0.2;\n  const frameX = useRef(0);\n  const frameY = useRef(0);\n  const frameCount = useRef(0);\n\n  // 브릭걸 위치 및 점프 관련 변수\n  const girlX = useRef(50);\n  const girlY = useRef(0);\n  const velocityY = useRef(0);\n  const gravity = 0.6;\n  const jumpCount = useRef(0);\n  const maxJumps = 2;\n\n  // 벽돌 배열\n  const bricks = useRef([]);\n\n  // 지형 관련 변수\n  const scrollSpeed = 2;\n  const tileSize = 50;\n  const groundTiles = useRef([]);\n  const levelData = [{\n    x: 0,\n    y: 350\n  }, {\n    x: 50,\n    y: 350\n  }, {\n    x: 100,\n    y: 350\n  }, {\n    x: 150,\n    y: 350\n  }, {\n    x: 200,\n    y: 350\n  }, {\n    x: 250,\n    y: 350\n  }, {\n    x: 350,\n    y: 350\n  }, {\n    x: 400,\n    y: 350\n  }, {\n    x: 500,\n    y: 300\n  }, {\n    x: 550,\n    y: 300\n  }, {\n    x: 600,\n    y: 250\n  }, {\n    x: 650,\n    y: 250\n  }, {\n    x: 700,\n    y: 200\n  }, {\n    x: 750,\n    y: 200\n  }];\n  useEffect(() => {\n    // 초기 지형 설정\n    groundTiles.current = levelData.map(tile => ({\n      ...tile,\n      type: 'ground'\n    }));\n\n    // 스프라이트 이미지 로드\n    spriteRef.current = new Image();\n    spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\n    spriteRef.current.onload = () => {\n      setSpriteLoaded(true);\n      // 최초 위치를 지형 위에 맞추기\n      const tile = groundTiles.current.find(tile => girlX.current + frameWidth * scale / 2 > tile.x && girlX.current + frameWidth * scale / 2 < tile.x + tileSize);\n      if (tile) {\n        girlY.current = tile.y - frameHeight * scale - 4;\n      }\n    };\n  }, []);\n\n  // 점프 가능 여부 판단\n  const isOnGround = () => {\n    const feetXLeft = girlX.current + 10;\n    const feetXRight = girlX.current + frameWidth * scale - 10;\n    const feetY = girlY.current + frameHeight * scale;\n    return groundTiles.current.some(tile => {\n      const isWithinX = feetXRight > tile.x && feetXLeft < tile.x + tileSize;\n      const isTouchingY = feetY >= tile.y && feetY <= tile.y + 5;\n      const isFalling = velocityY.current >= 0;\n      return isWithinX && isTouchingY && isFalling;\n    });\n  };\n\n  // 벽돌 던지기\n  const throwBrick = () => {\n    const startX = girlX.current + 30;\n    const startY = girlY.current + 10;\n    const vx = 6 + Math.random();\n    const vy = -8;\n    bricks.current.push({\n      x: startX,\n      y: startY,\n      vx,\n      vy\n    });\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const handleKeyDown = e => {\n      if (e.code === 'Space') {\n        e.preventDefault();\n        throwBrick();\n      } else if (e.code === 'ArrowUp') {\n        if (jumpCount.current < maxJumps) {\n          velocityY.current = -12 * (jumpCount.current === 1 ? 1.2 : 1);\n          jumpCount.current++;\n        }\n      }\n    };\n    const handleTouchStart = e => {\n      e.preventDefault();\n      const touchX = e.touches[0].clientX;\n      if (touchX < canvas.width / 2) {\n        if (jumpCount.current < maxJumps) {\n          velocityY.current = -12;\n          jumpCount.current++;\n        }\n      } else {\n        throwBrick();\n      }\n    };\n    const updateFrame = () => {\n      frameCount.current++;\n      if (frameCount.current % 10 === 0) {\n        frameX.current = (frameX.current + 1) % numCols;\n      }\n    };\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 지형 렌더링 및 스크롤\n      groundTiles.current.forEach(tile => {\n        tile.x -= scrollSpeed;\n        ctx.fillStyle = 'saddlebrown';\n        ctx.fillRect(tile.x, tile.y, tileSize, tileSize);\n      });\n\n      // 스크롤 타일 추가\n      const lastTile = groundTiles.current[groundTiles.current.length - 1];\n      if (lastTile && lastTile.x < canvas.width) {\n        groundTiles.current.push({\n          x: lastTile.x + tileSize,\n          y: 350,\n          type: 'ground'\n        });\n      }\n\n      // 중력 및 점프 처리\n      const onGround = isOnGround();\n      if (onGround && velocityY.current >= 0) {\n        velocityY.current = 0;\n        jumpCount.current = 0;\n        const landingTile = groundTiles.current.find(tile => girlX.current + frameWidth * scale / 2 > tile.x && girlX.current + frameWidth * scale / 2 < tile.x + tileSize);\n        if (landingTile) {\n          girlY.current = landingTile.y - frameHeight * scale;\n        }\n      } else {\n        velocityY.current += gravity;\n        girlY.current += velocityY.current;\n        const floorY = canvas.height - frameHeight * scale;\n        if (girlY.current > floorY) {\n          velocityY.current = 0;\n          girlY.current = floorY;\n          jumpCount.current = 0;\n        }\n      }\n\n      // 벽돌 이동 및 렌더링\n      ctx.font = '16px Arial';\n      bricks.current.forEach(brick => {\n        brick.x += brick.vx;\n        brick.vy += gravity * 0.5;\n        brick.y += brick.vy;\n        ctx.fillText('🧱', brick.x, brick.y);\n      });\n      bricks.current = bricks.current.filter(brick => brick.x <= canvas.width && brick.y <= canvas.height);\n\n      // 스프라이트 그리기\n      if (spriteLoaded) {\n        updateFrame();\n        ctx.drawImage(spriteRef.current, frameX.current * frameWidth, frameY.current * frameHeight, frameWidth, frameHeight, girlX.current, girlY.current, frameWidth * scale, frameHeight * scale);\n      } else {\n        ctx.fillStyle = 'hotpink';\n        ctx.fillRect(girlX.current, girlY.current, 30, 30);\n      }\n      animationFrameId = requestAnimationFrame(draw);\n    };\n\n    // 초기화 및 이벤트 등록\n    window.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('touchstart', handleTouchStart);\n    draw();\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [spriteLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"font-press font-bold mb-4 text-rose-400\",\n      children: \"Brick Girl: Run & Throw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasSize.width,\n      height: canvasSize.height,\n      className: \"bg-black rounded shadow-md touch-none\",\n      style: {\n        width: '100%',\n        maxWidth: '480px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-center mt-4 text-gray-500 dark:text-gray-400 font-press\",\n      children: \"\\u2B06\\uFE0F: Jump / Space: \\uD83E\\uDDF1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 9\n  }, this);\n};\n_s(BrickGirlRT, \"21aMvMbu0xF5kSBo1Ezvkvg+1uA=\");\n_c = BrickGirlRT;\nexport default BrickGirlRT;\nvar _c;\n$RefreshReg$(_c, \"BrickGirlRT\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","BrickGirlRT","_s","canvasRef","spriteRef","canvasSize","width","height","spriteLoaded","setSpriteLoaded","frameWidth","frameHeight","numCols","scale","frameX","frameY","frameCount","girlX","girlY","velocityY","gravity","jumpCount","maxJumps","bricks","scrollSpeed","tileSize","groundTiles","levelData","x","y","current","map","tile","type","Image","src","process","env","PUBLIC_URL","onload","find","isOnGround","feetXLeft","feetXRight","feetY","some","isWithinX","isTouchingY","isFalling","throwBrick","startX","startY","vx","Math","random","vy","push","canvas","ctx","getContext","animationFrameId","handleKeyDown","e","code","preventDefault","handleTouchStart","touchX","touches","clientX","updateFrame","draw","clearRect","forEach","fillStyle","fillRect","lastTile","length","onGround","landingTile","floorY","font","brick","fillText","filter","drawImage","requestAnimationFrame","window","addEventListener","removeEventListener","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","maxWidth","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/games/BrickGirlRT.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst BrickGirlRT = () => {\r\n    const canvasRef = useRef(null);\r\n    const spriteRef = useRef(null); // 스프라이트 이미지 객체\r\n    const [canvasSize] = useState({ width: 800, height: 400 }); // 실제 해상도 기준\r\n    const [spriteLoaded, setSpriteLoaded] = useState(false);\r\n\r\n    // 스프라이트 설정\r\n    const frameWidth = 335;\r\n    const frameHeight = 512;\r\n    const numCols = 3;\r\n    const scale = 0.2;\r\n    const frameX = useRef(0);\r\n    const frameY = useRef(0);\r\n    const frameCount = useRef(0);\r\n\r\n    // 브릭걸 위치 및 점프 관련 변수\r\n    const girlX = useRef(50);\r\n    const girlY = useRef(0);\r\n    const velocityY = useRef(0);\r\n    const gravity = 0.6;\r\n    const jumpCount = useRef(0);\r\n    const maxJumps = 2;\r\n\r\n    // 벽돌 배열\r\n    const bricks = useRef([]);\r\n\r\n    // 지형 관련 변수\r\n    const scrollSpeed = 2;\r\n    const tileSize = 50;\r\n    const groundTiles = useRef([]);\r\n    const levelData = [\r\n        { x: 0, y: 350 }, { x: 50, y: 350 }, { x: 100, y: 350 },\r\n        { x: 150, y: 350 }, { x: 200, y: 350 },\r\n        { x: 250, y: 350 }, { x: 350, y: 350 },\r\n        { x: 400, y: 350 },\r\n        { x: 500, y: 300 }, { x: 550, y: 300 },\r\n        { x: 600, y: 250 }, { x: 650, y: 250 },\r\n        { x: 700, y: 200 }, { x: 750, y: 200 },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // 초기 지형 설정\r\n        groundTiles.current = levelData.map(tile => ({ ...tile, type: 'ground' }));\r\n\r\n        // 스프라이트 이미지 로드\r\n        spriteRef.current = new Image();\r\n        spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\r\n        spriteRef.current.onload = () => {\r\n            setSpriteLoaded(true);\r\n            // 최초 위치를 지형 위에 맞추기\r\n            const tile = groundTiles.current.find(tile =>\r\n                girlX.current + (frameWidth * scale) / 2 > tile.x &&\r\n                girlX.current + (frameWidth * scale) / 2 < tile.x + tileSize\r\n            );\r\n            if (tile) {\r\n                girlY.current = tile.y - frameHeight * scale - 4;\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    // 점프 가능 여부 판단\r\n    const isOnGround = () => {\r\n        const feetXLeft = girlX.current + 10;\r\n        const feetXRight = girlX.current + frameWidth * scale - 10;\r\n        const feetY = girlY.current + frameHeight * scale;\r\n\r\n        return groundTiles.current.some(tile => {\r\n            const isWithinX = feetXRight > tile.x && feetXLeft < tile.x + tileSize;\r\n            const isTouchingY = feetY >= tile.y && feetY <= tile.y + 5;\r\n            const isFalling = velocityY.current >= 0;\r\n            return isWithinX && isTouchingY && isFalling;\r\n        });\r\n    };\r\n\r\n    // 벽돌 던지기\r\n    const throwBrick = () => {\r\n        const startX = girlX.current + 30;\r\n        const startY = girlY.current + 10;\r\n        const vx = 6 + Math.random();\r\n        const vy = -8;\r\n        bricks.current.push({ x: startX, y: startY, vx, vy });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        let animationFrameId;\r\n\r\n        const handleKeyDown = (e) => {\r\n            if (e.code === 'Space') {\r\n                e.preventDefault();\r\n                throwBrick();\r\n            } else if (e.code === 'ArrowUp') {\r\n                if (jumpCount.current < maxJumps) {\r\n                    velocityY.current = -12 * (jumpCount.current === 1 ? 1.2 : 1);\r\n                    jumpCount.current++;\r\n                }\r\n            }\r\n        };\r\n\r\n        const handleTouchStart = (e) => {\r\n            e.preventDefault();\r\n            const touchX = e.touches[0].clientX;\r\n            if (touchX < canvas.width / 2) {\r\n                if (jumpCount.current < maxJumps) {\r\n                    velocityY.current = -12;\r\n                    jumpCount.current++;\r\n                }\r\n            } else {\r\n                throwBrick();\r\n            }\r\n        };\r\n\r\n        const updateFrame = () => {\r\n            frameCount.current++;\r\n            if (frameCount.current % 10 === 0) {\r\n                frameX.current = (frameX.current + 1) % numCols;\r\n            }\r\n        };\r\n\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // 지형 렌더링 및 스크롤\r\n            groundTiles.current.forEach(tile => {\r\n                tile.x -= scrollSpeed;\r\n                ctx.fillStyle = 'saddlebrown';\r\n                ctx.fillRect(tile.x, tile.y, tileSize, tileSize);\r\n            });\r\n\r\n            // 스크롤 타일 추가\r\n            const lastTile = groundTiles.current[groundTiles.current.length - 1];\r\n            if (lastTile && lastTile.x < canvas.width) {\r\n                groundTiles.current.push({ x: lastTile.x + tileSize, y: 350, type: 'ground' });\r\n            }\r\n\r\n            // 중력 및 점프 처리\r\n            const onGround = isOnGround();\r\n            if (onGround && velocityY.current >= 0) {\r\n                velocityY.current = 0;\r\n                jumpCount.current = 0;\r\n                const landingTile = groundTiles.current.find(tile =>\r\n                    girlX.current + (frameWidth * scale) / 2 > tile.x &&\r\n                    girlX.current + (frameWidth * scale) / 2 < tile.x + tileSize\r\n                );\r\n                if (landingTile) {\r\n                    girlY.current = landingTile.y - frameHeight * scale;\r\n                }\r\n            } else {\r\n                velocityY.current += gravity;\r\n                girlY.current += velocityY.current;\r\n                const floorY = canvas.height - frameHeight * scale;\r\n                if (girlY.current > floorY) {\r\n                    velocityY.current = 0;\r\n                    girlY.current = floorY;\r\n                    jumpCount.current = 0;\r\n                }\r\n            }\r\n\r\n            // 벽돌 이동 및 렌더링\r\n            ctx.font = '16px Arial';\r\n            bricks.current.forEach(brick => {\r\n                brick.x += brick.vx;\r\n                brick.vy += gravity * 0.5;\r\n                brick.y += brick.vy;\r\n                ctx.fillText('🧱', brick.x, brick.y);\r\n            });\r\n            bricks.current = bricks.current.filter(brick => brick.x <= canvas.width && brick.y <= canvas.height);\r\n\r\n            // 스프라이트 그리기\r\n            if (spriteLoaded) {\r\n                updateFrame();\r\n                ctx.drawImage(\r\n                    spriteRef.current,\r\n                    frameX.current * frameWidth,\r\n                    frameY.current * frameHeight,\r\n                    frameWidth,\r\n                    frameHeight,\r\n                    girlX.current,\r\n                    girlY.current,\r\n                    frameWidth * scale,\r\n                    frameHeight * scale\r\n                );\r\n            } else {\r\n                ctx.fillStyle = 'hotpink';\r\n                ctx.fillRect(girlX.current, girlY.current, 30, 30);\r\n            }\r\n\r\n            animationFrameId = requestAnimationFrame(draw);\r\n        };\r\n\r\n        // 초기화 및 이벤트 등록\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        canvas.addEventListener('touchstart', handleTouchStart);\r\n        draw();\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n            canvas.removeEventListener('touchstart', handleTouchStart);\r\n            cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [spriteLoaded]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center mt-6\">\r\n            <h2 className=\"font-press font-bold mb-4 text-rose-400\">Brick Girl: Run & Throw</h2>\r\n            <canvas\r\n                ref={canvasRef}\r\n                width={canvasSize.width}\r\n                height={canvasSize.height}\r\n                className=\"bg-black rounded shadow-md touch-none\"\r\n                style={{ width: '100%', maxWidth: '480px' }}\r\n            />\r\n            <p className=\"text-xs text-center mt-4 text-gray-500 dark:text-gray-400 font-press\">\r\n                ⬆️: Jump / Space: 🧱\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BrickGirlRT;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}