{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\portfolio\\\\src\\\\games\\\\BrickGirlRT.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrickGirlRT = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const spriteRef = useRef(new Image());\n\n  // 스프라이트 설정\n  const frameWidth = 335;\n  const frameHeight = 512;\n  const numCols = 3;\n  const numRows = 2;\n  const scale = 0.2;\n  const frameX = useRef(0);\n  const frameY = useRef(0); // 0: 걷기, 1: 점프 시로 변경 예정\n  const frameCount = useRef(0);\n  const [spriteLoaded, setSpriteLoaded] = useState(false);\n\n  // 캐릭터 위치 및 점프 관련 변수\n  let girlX = 50;\n  let girlY = 300;\n  let isJumping = false;\n  let velocityY = 0;\n  const gravity = 0.8;\n\n  // 벽돌 배열 추가\n  const bricks = useRef([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n\n    // 캔버스 사이즈 설정\n    canvas.width = 800;\n    canvas.height = 400;\n\n    // 스프라이트 이미지 로드\n    spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\n    spriteRef.current.onload = () => {\n      setSpriteLoaded(true);\n    };\n\n    // 키보드 이벤트 처리\n    const handleKeyDown = e => {\n      if (e.code === 'Space') {\n        e.preventDefault(); // 스페이스바 스크롤 방지\n        throwBrick();\n      } else if (e.code === 'ArrowUp') {\n        if (!isJumping) {\n          isJumping = true;\n          velocityY = -12;\n        }\n      }\n    };\n\n    // 모바일 터치 조작\n    const handleTouchStart = e => {\n      const touchX = e.touches[0].clientX;\n      if (touchX < canvas.width / 2) {\n        // 왼쪽 터치 → 점프\n        if (!isJumping) {\n          isJumping = true;\n          velocityY = -12;\n        }\n      } else {\n        // 오른쪽 터치 → 공격\n        throwBrick();\n      }\n    };\n\n    // 애니메이션 프레임 업데이트\n    const updateFrame = () => {\n      frameCount.current++;\n      if (frameCount.current % 10 === 0) {\n        frameX.current = (frameX.current + 1) % numCols;\n      }\n    };\n\n    // 캐릭터 그리기\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 중력 적용 및 점프 처리\n      if (isJumping) {\n        velocityY += gravity;\n        girlY += velocityY;\n        if (girlY >= 300) {\n          girlY = 300;\n          isJumping = false;\n          velocityY = 0;\n        }\n      }\n\n      // 스프라이트 그리기\n      if (spriteLoaded) {\n        updateFrame();\n        ctx.drawImage(spriteRef.current, frameX.current * frameWidth, frameY.current * frameHeight, frameWidth, frameHeight, girlX, girlY, frameWidth * scale, frameHeight * scale);\n      } else {\n        // 대체 이미지 (로딩 전)\n        ctx.fillStyle = 'hotpink';\n        ctx.fillRect(girlX, girlY, 30, 30);\n      }\n\n      // 벽돌 그리기 + 이동\n      ctx.fillStyle = 'red';\n      bricks.current.forEach((brick, index) => {\n        // 위치 업데이트 (포물선)\n        brick.x += brick.vx;\n        brick.vy += gravity * 0.5; // 중력 영향\n        brick.y += brick.vy;\n\n        // 벽돌 그리기\n        ctx.fillRect(brick.x, brick.y, 10, 10);\n\n        // 화면 밖으로 나가면 제거\n        if (brick.x > canvas.width || brick.y > canvas.height) {\n          bricks.current.splice(index, 1);\n        }\n      });\n      animationFrameId = requestAnimationFrame(draw);\n    };\n\n    // 초기 설정\n    window.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('touchstart', handleTouchStart);\n    draw();\n\n    // 정리 함수\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [spriteLoaded]);\n\n  // 벽돌 던지기 함수\n  const throwBrick = () => {\n    // 브릭걸 손에서 날아가는 초기 위치\n    const startX = girlX + 30;\n    const startY = girlY + 10;\n\n    // 초기 속도 설정 (포물선)\n    const vx = 6 + Math.random(); // 속도 조금 랜덤하게\n    const vy = -8; // 위로 튀어나가는 각도\n\n    // 벽돌 하나 추가\n    bricks.current.push({\n      x: startX,\n      y: startY,\n      vx,\n      vy\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Brick Girl: Run & Throw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '2px solid #999'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u2B06\\uFE0F: Jump / Space: \\uD83E\\uDDF1 (\\uBAA8\\uBC14\\uC77C\\uC740 \\uD654\\uBA74 \\uC88C\\uC6B0 \\uD130\\uCE58)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n};\n_s(BrickGirlRT, \"U0Ilph6YXCw3hgyDCsJNVhIrmRQ=\");\n_c = BrickGirlRT;\nexport default BrickGirlRT;\nvar _c;\n$RefreshReg$(_c, \"BrickGirlRT\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","BrickGirlRT","_s","canvasRef","spriteRef","Image","frameWidth","frameHeight","numCols","numRows","scale","frameX","frameY","frameCount","spriteLoaded","setSpriteLoaded","girlX","girlY","isJumping","velocityY","gravity","bricks","canvas","current","ctx","getContext","animationFrameId","width","height","src","process","env","PUBLIC_URL","onload","handleKeyDown","e","code","preventDefault","throwBrick","handleTouchStart","touchX","touches","clientX","updateFrame","draw","clearRect","drawImage","fillStyle","fillRect","forEach","brick","index","x","vx","vy","y","splice","requestAnimationFrame","window","addEventListener","removeEventListener","cancelAnimationFrame","startX","startY","Math","random","push","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","border","_c","$RefreshReg$"],"sources":["C:/workspace/portfolio/src/games/BrickGirlRT.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst BrickGirlRT = () => {\r\n    const canvasRef = useRef(null);\r\n    const spriteRef = useRef(new Image());\r\n\r\n    // 스프라이트 설정\r\n    const frameWidth = 335;\r\n    const frameHeight = 512;\r\n    const numCols = 3;\r\n    const numRows = 2;\r\n    const scale = 0.2;\r\n\r\n    const frameX = useRef(0);\r\n    const frameY = useRef(0); // 0: 걷기, 1: 점프 시로 변경 예정\r\n    const frameCount = useRef(0);\r\n    const [spriteLoaded, setSpriteLoaded] = useState(false);\r\n\r\n    // 캐릭터 위치 및 점프 관련 변수\r\n    let girlX = 50;\r\n    let girlY = 300;\r\n    let isJumping = false;\r\n    let velocityY = 0;\r\n    const gravity = 0.8;\r\n\r\n    // 벽돌 배열 추가\r\n    const bricks = useRef([]);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        let animationFrameId;\r\n\r\n        // 캔버스 사이즈 설정\r\n        canvas.width = 800;\r\n        canvas.height = 400;\r\n\r\n        // 스프라이트 이미지 로드\r\n        spriteRef.current.src = process.env.PUBLIC_URL + '/brickgirl_sprite.png';\r\n        spriteRef.current.onload = () => {\r\n            setSpriteLoaded(true);\r\n        };\r\n\r\n        // 키보드 이벤트 처리\r\n        const handleKeyDown = (e) => {\r\n            if (e.code === 'Space') {\r\n                e.preventDefault(); // 스페이스바 스크롤 방지\r\n                throwBrick();\r\n            } else if (e.code === 'ArrowUp') {\r\n                if (!isJumping) {\r\n                    isJumping = true;\r\n                    velocityY = -12;\r\n                }\r\n            }\r\n        };\r\n\r\n        // 모바일 터치 조작\r\n        const handleTouchStart = (e) => {\r\n            const touchX = e.touches[0].clientX;\r\n\r\n            if (touchX < canvas.width / 2) {\r\n                // 왼쪽 터치 → 점프\r\n                if (!isJumping) {\r\n                    isJumping = true;\r\n                    velocityY = -12;\r\n                }\r\n            } else {\r\n                // 오른쪽 터치 → 공격\r\n                throwBrick();\r\n            }\r\n        };\r\n\r\n        // 애니메이션 프레임 업데이트\r\n        const updateFrame = () => {\r\n            frameCount.current++;\r\n            if (frameCount.current % 10 === 0) {\r\n                frameX.current = (frameX.current + 1) % numCols;\r\n            }\r\n        };\r\n\r\n        // 캐릭터 그리기\r\n        const draw = () => {\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // 중력 적용 및 점프 처리\r\n            if (isJumping) {\r\n                velocityY += gravity;\r\n                girlY += velocityY;\r\n\r\n                if (girlY >= 300) {\r\n                    girlY = 300;\r\n                    isJumping = false;\r\n                    velocityY = 0;\r\n                }\r\n            }\r\n\r\n            // 스프라이트 그리기\r\n            if (spriteLoaded) {\r\n                updateFrame();\r\n                ctx.drawImage(\r\n                    spriteRef.current,\r\n                    frameX.current * frameWidth,\r\n                    frameY.current * frameHeight,\r\n                    frameWidth,\r\n                    frameHeight,\r\n                    girlX,\r\n                    girlY,\r\n                    frameWidth * scale,\r\n                    frameHeight * scale\r\n                );\r\n            } else {\r\n                // 대체 이미지 (로딩 전)\r\n                ctx.fillStyle = 'hotpink';\r\n                ctx.fillRect(girlX, girlY, 30, 30);\r\n            }\r\n\r\n            // 벽돌 그리기 + 이동\r\n            ctx.fillStyle = 'red';\r\n            bricks.current.forEach((brick, index) => {\r\n                // 위치 업데이트 (포물선)\r\n                brick.x += brick.vx;\r\n                brick.vy += gravity * 0.5; // 중력 영향\r\n                brick.y += brick.vy;\r\n\r\n                // 벽돌 그리기\r\n                ctx.fillRect(brick.x, brick.y, 10, 10);\r\n\r\n                // 화면 밖으로 나가면 제거\r\n                if (brick.x > canvas.width || brick.y > canvas.height) {\r\n                    bricks.current.splice(index, 1);\r\n                }\r\n            });\r\n\r\n\r\n            animationFrameId = requestAnimationFrame(draw);\r\n        };\r\n\r\n        // 초기 설정\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        canvas.addEventListener('touchstart', handleTouchStart);\r\n        draw();\r\n\r\n        // 정리 함수\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n            canvas.removeEventListener('touchstart', handleTouchStart);\r\n            cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [spriteLoaded]);\r\n\r\n    // 벽돌 던지기 함수\r\n    const throwBrick = () => {\r\n        // 브릭걸 손에서 날아가는 초기 위치\r\n        const startX = girlX + 30;\r\n        const startY = girlY + 10;\r\n\r\n        // 초기 속도 설정 (포물선)\r\n        const vx = 6 + Math.random(); // 속도 조금 랜덤하게\r\n        const vy = -8; // 위로 튀어나가는 각도\r\n\r\n        // 벽돌 하나 추가\r\n        bricks.current.push({ x: startX, y: startY, vx, vy });\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h2>Brick Girl: Run & Throw</h2>\r\n            <canvas ref={canvasRef} style={{ border: '2px solid #999' }} />\r\n            <p>⬆️: Jump / Space: 🧱 (모바일은 화면 좌우 터치)</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BrickGirlRT;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}